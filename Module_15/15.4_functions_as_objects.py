'''–¢–µ–º–∞ —É—Ä–æ–∫–∞: —Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ –æ–±—ä–µ–∫—Ç—ã
–§—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ –æ–±—ä–µ–∫—Ç—ã
–§—É–Ω–∫—Ü–∏–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
–§—É–Ω–∫—Ü–∏–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
–ê–Ω–Ω–æ—Ç–∞—Ü–∏—è. –£—Ä–æ–∫ –ø–æ—Å–≤—è—â–µ–Ω –æ—Å–Ω–æ–≤–Ω—ã–º –∫–æ–Ω—Ü–µ–ø—Ü–∏—è–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.

–§—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ –æ–±—ä–µ–∫—Ç—ã
–î–æ —Å–∏—Ö –ø–æ—Ä –º—ã —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–ª–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –æ—Ç–¥–µ–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç —è–∑—ã–∫–∞ —Å–æ —Å–≤–æ–∏–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º –∏ –º–µ—Ö–∞–Ω–∏–∑–º–æ–º —Ä–∞–±–æ—Ç—ã.
 –ù–æ, –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è, —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–∞–∫–∂–µ —á—Ç–æ-—Ç–æ –≤—Ä–æ–¥–µ –æ—Å–æ–±–æ–≥–æ —Ç–∏–ø–∞ –æ–±—ä–µ–∫—Ç–æ–≤. –ë—ã–≤–∞—é—Ç —á–∏—Å–ª–∞, —Å—Ç—Ä–æ–∫–∏, —Å–ø–∏—Å–∫–∏, –∫–æ—Ä—Ç–µ–∂–∏, —Å–ª–æ–≤–∞—Ä–∏,
  –º–Ω–æ–∂–µ—Å—Ç–≤–∞. –ê –±—ã–≤–∞—é—Ç ‚Äî —Ñ—É–Ω–∫—Ü–∏–∏. –£ –∫–∞–∂–¥–æ–≥–æ –∏–∑ —ç—Ç–∏—Ö —Ç–∏–ø–æ–≤ –µ—Å—Ç—å —Å–≤–æ–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏, —Å–≤–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, –Ω–æ –≤—Å–µ –æ–Ω–∏ ‚Äî –æ–±—ä–µ–∫—Ç—ã.

–ù–∞–ø–æ–º–Ω–∏–º, —á—Ç–æ —è–∑—ã–∫ Python –º—É–ª—å—Ç–∏–ø–∞—Ä–∞–¥–∏–≥–º–µ–Ω–Ω—ã–π, –æ–Ω –æ–¥–∏–Ω–∞–∫–æ–≤–æ —Ö–æ—Ä–æ—à–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –∏
–æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –ø–∞—Ä–∞–¥–∏–≥–º—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.

–ü—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–∏–∂–µ –∫–æ–¥:

num = 17
numbers = [1, 2, 3]
colors = (1, 2, 3)
name = 'Python'

print(type(num))
print(type(numbers))
print(type(colors))
print(type(name))
–≤—ã–≤–æ–¥–∏—Ç:

<class 'int'>
<class 'list'>
<class 'tuple'>
<class 'str'>
–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ ‚Äî –æ–±—ä–µ–∫—Ç —Ç–∏–ø–∞ int, —Å–ø–∏—Å–æ–∫ ‚Äî –æ–±—ä–µ–∫—Ç —Ç–∏–ø–∞ list, –∫–æ—Ä—Ç–µ–∂ ‚Äî –æ–±—ä–µ–∫—Ç —Ç–∏–ø–∞ tuple, —Å—Ç—Ä–æ–∫–∞ ‚Äî
–æ–±—ä–µ–∫—Ç —Ç–∏–ø–∞ str –∏ —Ç.–¥.

–õ—é–±–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤ —è–∑—ã–∫–µ Python ‚Äî –æ–±—ä–µ–∫—Ç —Ç–∏–ø–∞ function.

–ü—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–∏–∂–µ –∫–æ–¥:

print(type(print))
print(type(sum))
print(type(abs))
–≤—ã–≤–æ–¥–∏—Ç:

<class 'builtin_function_or_method'>
<class 'builtin_function_or_method'>
<class 'builtin_function_or_method'>
Python –≤—ã–¥–∞–µ—Ç –Ω–∞–º —Å—Ç—Ä–æ–∫—É <class 'builtin_function_or_method'>, –∫–æ—Ç–æ—Ä–∞—è –ø–æ—è—Å–Ω—è–µ—Ç, —á—Ç–æ print, sum, abs ‚Äî –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ
—Ñ—É–Ω–∫—Ü–∏–∏ —è–∑—ã–∫–∞, –∏–ª–∏ –º–µ—Ç–æ–¥—ã.

–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: —Å–∫–æ–±–∫–∏ –Ω–µ —Å—Ç–∞–≤–∏–º –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ —Ñ—É–Ω–∫—Ü–∏—é type(), –º—ã –Ω–µ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∞ –ø–µ—Ä–µ–¥–∞–µ–º
–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.

–ú—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ–º –æ–±—ä—è–≤–∏—Ç—å —Å–≤–æ—é —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Ç–æ–∂–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º.

–ü—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–∏–∂–µ –∫–æ–¥:

def hello():
    print('Hello from function')


print(type(hello))
–≤—ã–≤–æ–¥–∏—Ç:

<class 'function'>
‚Äã   ‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã–í —è–∑—ã–∫–µ Python –≤—Å–µ –æ–±—ä–µ–∫—Ç: —á–∏—Å–ª–æ, —Å—Ç—Ä–æ–∫–∞, —Å–ø–∏—Å–æ–∫, –∫–æ—Ä—Ç–µ–∂, –º–Ω–æ–∂–µ—Å—Ç–≤–æ, —Å–ª–æ–≤–∞—Ä—å, –¥–∞–∂–µ
—Ñ—É–Ω–∫—Ü–∏—è.

–ü–æ—Å–∫–æ–ª—å–∫—É —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–æ–∂–µ –æ–±—ä–µ–∫—Ç—ã, —Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–∏–º–∏ –º–æ–∂–Ω–æ –∏ –∫–∞–∫ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏: –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –∏—Ö –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤
–∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥—Ä—É–≥–∏–º —Ñ—É–Ω–∫—Ü–∏—è–º, –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏–∑ —Ñ—É–Ω–∫—Ü–∏–π –∏ —Ç.–¥.

–ü—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–∏–∂–µ –∫–æ–¥:

def hello():
    print('Hello from function')


func = hello     #  –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π func —Ñ—É–Ω–∫—Ü–∏—é hello
func()           #  –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
–≤—ã–≤–æ–¥–∏—Ç:

Hello from function
–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —Ç–µ–ø–µ—Ä—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é func –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏—é hello().

–†–∞—Å—Å–º–æ—Ç—Ä–∏–º –µ—â–µ –æ–¥–∏–Ω –ø—Ä–∏–º–µ—Ä. –ï—Å–ª–∏ –ø–æ –∫–∞–∫–æ–π-–ª–∏–±–æ –ø—Ä–∏—á–∏–Ω–µ –≤–∞–º –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ print(), –∫–æ—Ç–æ—Ä–∞—è
–≤—ã–≤–æ–¥–∏—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ —ç–∫—Ä–∞–Ω, –º–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Ç–∞–∫–æ–π –∫–æ–¥:

writeln = print            # –∫–∞–∫ –≤ —è–∑—ã–∫–µ Pascal üòÄ

writeln('Hello world!')
writeln('Python')
–¢–∞–∫–æ–π –∫–æ–¥ –≤—ã–≤–æ–¥–∏—Ç:

Hello world!
Python
–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –ø–æ–∑–≤–æ–ª—è–µ—Ç –≥–∏–±–∫–æ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–º, –∫–∞–∫—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –º—ã —Ö–æ—Ç–∏–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.
 –í –æ–¥–Ω—É –∏ —Ç—É –∂–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–≤–µ–¥–µ–Ω–∏—è –∏ –º–µ–Ω—è—Ç—å –∏—Ö –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏. –ü—Ä–∏ —ç—Ç–æ–º –Ω–µ —Ç–æ–ª—å–∫–æ
 –Ω–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –º–µ–Ω—è—Ç—å –∫–æ–¥ –ø–æ –≤—Å–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ, –Ω–æ –∏ –Ω–µ –ø—Ä–∏–¥–µ—Ç—Å—è –¥–∞–∂–µ –∏–∑–º–µ–Ω—è—Ç—å –∫–æ–¥ —Ñ—É–Ω–∫—Ü–∏–π. –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
 –ø—Ä–∏—Å–≤–æ–∏—Ç—å –≤–º–µ—Å—Ç–æ –æ–¥–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ ‚Äî –¥—Ä—É–≥—É—é.

–ü—Ä–µ–¥—Å—Ç–∞–≤–∏–º —Å–µ–±–µ —Å–∏—Ç—É–∞—Ü–∏—é, –∫–æ–≥–¥–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–µ–∫—É—é —Ñ—É–Ω–∫—Ü–∏—é, –µ—Å–ª–∏ –∑–∞–¥–∞–Ω–æ –∏–º—è –∫–æ–º–∞–Ω–¥—ã. –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º,
 –µ—Å–ª–∏ –ø—Ä–∏—à–ª–∞ –∫–æ–º–∞–Ω–¥–∞ start ‚Äî –Ω–∞–¥–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é start(), –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ stop ‚Äî —Ñ—É–Ω–∫—Ü–∏—é stop(), –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ pause ‚Äî
 —Ñ—É–Ω–∫—Ü–∏—é pause().

–¢–∞–∫—É—é –ª–æ–≥–∏–∫—É –ª–µ–≥–∫–æ –º–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–∏ –ø–æ–º–æ—â–∏ —É—Å–ª–æ–≤–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ if .. elif.

def start():
    # —Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏ start


def stop():
    # —Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏ stop


def pause():
    # —Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏ pause


command = input()        # —Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã

if command == 'start':
    start()
elif command == 'stop':
    stop()
elif command == 'pause'
    pause()
–û–¥–Ω–∞–∫–æ –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥ –±—É–¥–µ—Ç –º–Ω–æ–≥–æ –∏–ª–∏, –µ—Å–ª–∏ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É–¥–µ—Ç —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å—Å—è, —Ç–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä if –ø–æ–ª—É—á–∏—Ç—Å—è —Å–ª–∏—à–∫–æ–º
–≥—Ä–æ–º–æ–∑–¥–∫–∏–º. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Å–ª–æ–≤–∞—Ä—å, –≥–¥–µ –∫–ª—é—á–æ–º —Å–ª—É–∂–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ–º ‚Äî —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è
—Ñ—É–Ω–∫—Ü–∏—è.

–ü—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–∏–∂–µ –∫–æ–¥ —Ä–µ—à–∞–µ—Ç —Ç—É –∂–µ —Å–∞–º—É—é –∑–∞–¥–∞—á—É, –Ω–æ –±–æ–ª–µ–µ –≥–∏–±–∫–æ:

def start():
    # —Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏ start


def stop():
    # —Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏ stop


def pause():
    # —Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏ pause


commands = {'start': start, 'stop': stop, 'pause': pause}  # —Å–ª–æ–≤–∞—Ä—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∫–æ–º–∞–Ω–¥–∞ ‚Üí —Ñ—É–Ω–∫—Ü–∏—è

command = input()        # —Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã

commands[command]()      # –≤—ã–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —á–µ—Ä–µ–∑ —Å–ª–æ–≤–∞—Ä—å –ø–æ –∫–ª—é—á—É
–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –≤—Å—è –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã —Å–≤–æ–¥–∏—Ç—Å—è –∫ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–µ:

commands[command]()
–≥–¥–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è command ‚Äî –∏–º—è –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—É—é –Ω–∞–¥–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å. –¢–∞–∫–æ–π –∫–æ–¥ –Ω–∞–º–Ω–æ–≥–æ –≥–∏–±—á–µ!

–§—É–Ω–∫—Ü–∏–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏—Å–≤–∞–∏–≤–∞—Ç—å –∏–º—è —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –ø–æ–∑–≤–æ–ª—è–µ—Ç, –≤ —á–∞—Å—Ç–Ω–æ—Å—Ç–∏, –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏–º—è —Ñ—É–Ω–∫—Ü–∏–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –¥—Ä—É–≥–æ–π
—Ñ—É–Ω–∫—Ü–∏–∏. –≠—Ç–æ –¥–æ—Å—Ç—É–ø–Ω–æ –≤–æ –º–Ω–æ–≥–∏—Ö —è–∑—ã–∫–∞—Ö, –Ω–æ –≤ Python –ø—Ä–æ—â–µ, –±–ª–∞–≥–æ–¥–∞—Ä—è –µ–≥–æ –≥–∏–±–∫–æ–π —Ç–∏–ø–∏–∑–∞—Ü–∏–∏.

–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ª–µ–≥–∫–æ –∏ –∫—Ä–∞—Å–∏–≤–æ —Ä–µ—à–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏. –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è ‚Äì –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏, –≥–¥–µ
 —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –∏–≥—Ä–∞–µ—Ç —Ä–æ–ª—å –≤–Ω–µ—à–Ω–µ–≥–æ —Ñ–∞–∫—Ç–æ—Ä–∞.

–ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–π –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ —Å—Ç—Ä–æ–∏—Ç—å
–≥—Ä–∞—Ñ–∏–∫–∏ –º–Ω–æ–≥–∏—Ö –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π, —Ç–æ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –ø—Ä–∏–¥–µ—Ç—Å—è –ø–∏—Å–∞—Ç—å –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é, –∏–ª–∏ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –∏–º–µ—é—â—É—é—Å—è.

–ù–æ –ª–æ–≥–∏–∫–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–∞ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –ø–æ—ç—Ç–æ–º—É –º–æ–∂–Ω–æ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å
 –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ñ—É–Ω–∫—Ü–∏—é –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞. –û–ø—Ä–µ–¥–µ–ª–∏–º —Ñ—É–Ω–∫—Ü–∏—é plot(), –∫–æ—Ç–æ—Ä–∞—è
 –ø—Ä–∏–Ω–∏–º–∞–µ—Ç 33 –∞—Ä–≥—É–º–µ–Ω—Ç–∞: f ‚Äì —Ñ—É–Ω–∫—Ü–∏—é, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏–º –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫, –∏ a, b ‚Äì –≥—Ä–∞–Ω–∏—Ü—ã –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è
 –≥—Ä–∞—Ñ–∏–∫–∞.

def plot(f, a, b):
–ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ñ—É–Ω–∫—Ü–∏–∏ plot() –º—ã –º–æ–∂–µ–º —É–∫–∞–∑–∞—Ç—å, –¥–ª—è –∫–∞–∫–æ–π –∏–º–µ–Ω–Ω–æ —Ñ—É–Ω–∫—Ü–∏–∏ —Å—Ç—Ä–æ–∏–º –≥—Ä–∞—Ñ–∏–∫. –ù–∞–ø—Ä–∏–º–µ—Ä, –ø—É—Å—Ç—å —É –Ω–∞—Å –µ—Å—Ç—å
 —Å–ª–µ–¥—É—é—â–∏–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:

def square_add_one(x):
    return x*x + 1


def cube_add_square(x):
    return x**3 + x**2
–ß—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ y=x^2+1y=x
2
 +1 –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ [1; \, 10][1;10]  –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é plot() —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏:
 plot(square_add_one, 1, 10).

–ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ, –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ plot(cube_add_square, -10, 10) –ø–æ—Å—Ç—Ä–æ–∏—Ç –≥—Ä–∞—Ñ–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ y=x^3+x^2y=x
3
 +x
2
  –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ [-10; \, 10][‚àí10;10].


–ì—Ä–∞—Ñ–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ y=x^2+1y=x
2
 +1

–ì—Ä–∞—Ñ–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ y=x^3+x^2y=x
3
 +x
2

–õ–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ plot() –Ω–µ –Ω—É–∂–Ω–æ –º–µ–Ω—è—Ç—å, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –µ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –≤–Ω—É—Ç—Ä–∏.
–¢–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–æ –º–Ω–æ–≥–∏—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ö Python. –í –±–∏–±–ª–∏–æ—Ç–µ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º—ã –ø–µ—Ä–µ–¥–∞–µ–º —Ç—É –ª–æ–≥–∏–∫—É, –∫–æ—Ç–æ—Ä–∞—è
–Ω—É–∂–Ω–∞ –Ω–∞–º, –≤–º–µ—Å—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π, —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ.

–§—É–Ω–∫—Ü–∏–∏, —Å–ø–æ—Å–æ–±–Ω—ã–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∏–ª–∏/–∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –≤—ã—Å—à–µ–≥–æ
 –ø–æ—Ä—è–¥–∫–∞.

–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
–í –ø—Ä–æ—à–ª—ã—Ö —É—Ä–æ–∫–∞—Ö –º—ã –∏–∑—É—á–∏–ª–∏ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:

min(): –ø–æ–∏—Å–∫ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞;
max(): –ø–æ–∏—Å–∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞;
sorted(): —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö.
–ù–µ –ø—É—Ç–∞–π—Ç–µ —Å–ø–∏—Å–æ—á–Ω—ã–π –º–µ—Ç–æ–¥ sort() –∏ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é sorted(). –û–Ω–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ, –Ω–æ —Å–ø–∏—Å–æ—á–Ω—ã–π –º–µ—Ç–æ–¥
sort() —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–∞ –º–µ—Å—Ç–µ, –∞ —Ñ—É–Ω–∫—Ü–∏—è sorted() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫.

–ü—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É —Ñ—É–Ω–∫—Ü–∏–π –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ:

numbers = [10, -7, 8, -100, -50, 32, 87, 117, -210]

print(max(numbers))
print(min(numbers))
print(sorted(numbers))
–ü—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –≤—ã—à–µ –∫–æ–¥ –≤—ã–≤–æ–¥–∏—Ç:

117
-210
[-210, -100, -50, -7, 8, 10, 32, 87, 117]
–ù–æ —á—Ç–æ, –µ—Å–ª–∏ –º—ã —Ö–æ—Ç–∏–º –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ –º–æ–¥—É–ª—é —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞ numbers? –ò –≤–æ–æ–±—â–µ, —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å
—ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º, –∞ –±–æ–ª–µ–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–º–∏?

–ù–∞ —ç—Ç–æ—Ç —Å–ª—É—á–∞–π –≤—Å–µ –≤—ã—à–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç key ‚Äì —Ñ—É–Ω–∫—Ü–∏—é,
–æ–ø—Ä–µ–¥–µ–ª—è—é—â—É—é —É—Å–ª–æ–≤–∏—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –î—Ä—É–≥–∏–º–∏ —Å–ª–æ–≤–∞–º–∏, –∑–Ω–∞—á–µ–Ω–∏–µ key –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ñ—É–Ω–∫—Ü–∏–µ–π, –ø—Ä–∏–Ω–∏–º–∞—é—â–µ–π –æ–¥–∏–Ω
–∞—Ä–≥—É–º–µ–Ω—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—â–µ–π –Ω–∞ –µ–≥–æ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è.

   –§—É–Ω–∫—Ü–∏—è, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∞—è —É—Å–ª–æ–≤–∏—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–º–ø–∞—Ä–∞—Ç–æ—Ä (compare ‚Äì —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å).

–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ min(), max(), sorted() ‚Äì —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—é
—Å—Ä–∞–≤–Ω–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

–ü—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –≤—ã—à–µ—Å–∫–∞–∑–∞–Ω–Ω–æ–µ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ –∫–æ–¥–∞:

numbers = [10, -7, 8, -100, -50, 32, 87, 117, -210]

print(max(numbers, key=abs))        #  —É–∫–∞–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é abs –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–æ–º–ø–∞—Ä–∞—Ç–æ—Ä–∞
print(min(numbers, key=abs))        #  —É–∫–∞–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é abs –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–æ–º–ø–∞—Ä–∞—Ç–æ—Ä–∞
print(sorted(numbers, key=abs))     #  —É–∫–∞–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é abs –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–æ–º–ø–∞—Ä–∞—Ç–æ—Ä–∞
–ü—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –≤—ã—à–µ –∫–æ–¥ –≤—ã–≤–æ–¥–∏—Ç:

-210                                         # –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø–æ –º–æ–¥—É–ª—é —ç–ª–µ–º–µ–Ω—Ç
-7                                           # –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–æ –º–æ–¥—É–ª—é —ç–ª–µ–º–µ–Ω—Ç
[-7, 8, 10, 32, -50, 87, -100, 117, -210]    # —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ –º–æ–¥—É–ª–µ–π —ç–ª–µ–º–µ–Ω—Ç–æ–≤
–†–∞—Å—Å–º–æ—Ç—Ä–∏–º –µ—â–µ –æ–¥–∏–Ω –ø—Ä–∏–º–µ—Ä.

–ü—É—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ points —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –≤–∏–¥–µ –∫–æ—Ä—Ç–µ–∂–µ–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—á–µ–∫ –ø–ª–æ—Å–∫–æ—Å—Ç–∏ –≤ –¥–≤—É–º–µ—Ä–Ω–æ–π –±–∏–ø–æ–ª—è—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç.

points = [(1, -1), (2, 3), (-10, 15), (10, 9), (7, 18), (1, 5), (2, -4)]
–ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ sorted() (–∏–ª–∏ —Å–ø–∏—Å–æ—á–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ sort()) —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø—Ä–æ–π–¥–µ—Ç –ø–æ –ø–µ—Ä–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º
–ø–∞—Ä –∫–æ—Ä—Ç–µ–∂–∞, –∞ –≤ —Å–ª—É—á–∞–µ –∏—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è, –ø–æ –≤—Ç–æ—Ä—ã–º.

–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–∏–∂–µ –∫–æ–¥:

points = [(1, -1), (2, 3), (-10, 15), (10, 9), (7, 18), (1, 5), (2, -4)]

points.sort()    #  —Å–æ—Ä—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ—á–µ–∫ –Ω–∞ –º–µ—Å—Ç–µ

print(points)
–≤—ã–≤–æ–¥–∏—Ç:

[(-10, 15), (1, -1), (1, 5), (2, -4), (2, 3), (7, 18), (10, 9)]
–†–∞—Å—Å–º–æ—Ç—Ä–∏–º —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥:

def compare_by_second(point):
    return point[1]


def compare_by_sum(point):
    return point[0] + point[1]


points = [(1, -1), (2, 3), (-10, 15), (10, 9), (7, 18), (1, 5), (2, -4)]

print(sorted(points, key=compare_by_second))   # —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ç–æ—Ä–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é –∫–æ—Ä—Ç–µ–∂–∞
print(sorted(points, key=compare_by_sum))      # —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Å—É–º–º–µ –∫–æ—Ä—Ç–µ–∂–∞
–û–Ω –≤—ã–≤–æ–¥–∏—Ç:

[(2, -4), (1, -1), (2, 3), (1, 5), (10, 9), (-10, 15), (7, 18)]
[(2, -4), (1, -1), (2, 3), (-10, 15), (1, 5), (10, 9), (7, 18)]
–§—É–Ω–∫—Ü–∏–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
–û–±—ä–µ–∫—Ç–Ω–∞—è —Å—É—â–Ω–æ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏—Ö –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –≤ –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –æ–¥–Ω–∏ —Ñ—É–Ω–∫—Ü–∏–∏
 –∏–∑ –¥—Ä—É–≥–∏—Ö. –¢–æ –µ—Å—Ç—å, —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Ä–∞–±–æ—Ç—ã –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–∏—Å–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã —Ñ—É–Ω–∫—Ü–∏–π,
 –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã—Ö –∏–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.

–†–∞—Å—Å–º–æ—Ç—Ä–∏–º –∫–æ–¥, –≥–¥–µ —Ñ—É–Ω–∫—Ü–∏—è generator() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é hello() –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã.

def generator():
    def hello():
        print('Hello from function!')
    return hello
–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ generator() –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏—é.

–ü—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–∏–∂–µ –∫–æ–¥:

func = generator()
func()
–≤—ã–≤–æ–¥–∏—Ç:

Hello from function!
   –í Python –º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏, –≤–µ–¥—å —Ñ—É–Ω–∫—Ü–∏—è —ç—Ç–æ –æ–±—ä–µ–∫—Ç.

–ü—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –≤—ã—à–µ –ø—Ä–∏–º–µ—Ä –Ω–µ –æ—á–µ–Ω—å –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–µ–Ω, –Ω–æ –∏–¥–µ—é –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –±–æ–ª–µ–µ –º–æ—â–Ω—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–≤
 —Ñ—É–Ω–∫—Ü–∏–π. –ù–∞–ø—Ä–∏–º–µ—Ä, —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º —Å–µ–º–µ–π—Å—Ç–≤–æ —Ñ—É–Ω–∫—Ü–∏–π ‚Äî –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Ç—Ä–µ—Ö—á–ª–µ–Ω–æ–≤. –í—Å–µ —ç—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–º–µ—é—Ç –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –≤–∏–¥
f(x) = ax^2+bx+c,
f(x)=ax
2
 +bx+c,
–Ω–æ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ —Ç—Ä–µ—Ö—á–ª–µ–Ω–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ a, b, ca,b,c. –ú—ã –º–æ–∂–µ–º –Ω–∞–ø–∏—Å–∞—Ç—å
 –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ñ—É–Ω–∫—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–π –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º a, b, ca,b,c, –ø–æ—Å—Ç—Ä–æ–∏—Ç –∏ –≤–µ—Ä–Ω–µ—Ç –Ω–∞–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π —Ç—Ä–µ—Ö—á–ª–µ–Ω:

def generator_square_polynom(a, b, c):
    def square_polynom(x):
        return a*x**2 + b*x + c
    return square_polynom
–ü—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–∏–∂–µ –∫–æ–¥:

f = generator_square_polynom(a=1, b=2, c=1)
g = generator_square_polynom(a=2, b=0, c=-3)
h = generator_square_polynom(a=-3, b=-10, c=50)

print(f(1))
print(g(2))
print(h(-1))
–≤—ã–≤–æ–¥–∏—Ç:

4
5
57
–î—Ä—É–≥–∏–º–∏ —Å–ª–æ–≤–∞–º–∏ –º—ã –ø–æ—Å—Ç—Ä–æ–∏–ª–∏ —Ñ—É–Ω–∫—Ü–∏–∏ f(x)= x^2+2x+1, \, g(x) = 2x^2-3, \, h(x)=-3x^2-10x+50f(x)=x
2
 +2x+1,g(x)=2x
2
 ‚àí3,h(x)=‚àí3x
2
 ‚àí10x+50.

–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ç–æ, —á—Ç–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Ñ—É–Ω–∫—Ü–∏—è square_polynom() –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–Ω–µ—à–Ω–µ–π —Ñ—É–Ω–∫—Ü–∏–∏
generator_square_polynom(). –¢–∞–∫—É—é –≤–ª–æ–∂–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞–∑—ã–≤–∞—é—Ç –∑–∞–º—ã–∫–∞–Ω–∏–µ–º.

–ó–∞–º—ã–∫–∞–Ω–∏—è ‚Äì –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, —Å—Å—ã–ª–∞—é—â–∏–µ—Å—è –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –æ–±—ä—è–≤–ª–µ–Ω–Ω—ã–µ –≤–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –∏ –Ω–µ —è–≤–ª—è—é—â–∏–µ—Å—è
 –µ—ë –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏—è
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –§—É–Ω–∫—Ü–∏—è sorted() –∏ —Å–ø–∏—Å–æ—á–Ω—ã–π –º–µ—Ç–æ–¥ sort() –ø–æ–º–∏–º–æ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ key, –ø—Ä–∏–Ω–∏–º–∞—é—Ç –µ—â–µ –∞—Ä–≥—É–º–µ–Ω—Ç
 reverse, –∫–æ—Ç–æ—Ä—ã–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ False, —á—Ç–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é. –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ
 reverse —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤ True, –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —É–±—ã–≤–∞–Ω–∏—é.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø—Ä–∏ –ø–æ–º–æ—â–∏ —Ñ—É–Ω–∫—Ü–∏–∏ sorted() –∏ —Å–ø–∏—Å–æ—á–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ sort() —Å—Ç–∞–±–∏–ª—å–Ω–∞, —Ç–æ –µ—Å—Ç—å –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç
 –Ω–µ–∏–∑–º–µ–Ω–Ω–æ—Å—Ç—å –≤–∑–∞–∏–º–æ—Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è —Ä–∞–≤–Ω—ã—Ö –º–µ–∂–¥—É —Å–æ–±–æ–π —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

–ü—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–∏–∂–µ –∫–æ–¥:

def comparator(item):
    return item[0]


data = [('red', 1), ('blue', 2), ('green', 5), ('blue', 1)]
data.sort(key=comparator)   # —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø–µ—Ä–≤–æ–º—É –ø–æ–ª—é

print(data)
–≤—ã–≤–æ–¥–∏—Ç:

[('blue', 2), ('blue', 1), ('green', 5), ('red', 1)]
–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –¥–≤–µ –∑–∞–ø–∏—Å–∏ —Å 'blue' —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ –Ω–∞—á–∞–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –§—É–Ω–∫—Ü–∏–∏ max() –∏ min() –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –ø–µ—Ä–≤—ã–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∏–ª–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç, –µ—Å–ª–∏ —Ç–∞–∫–æ–≤—ã—Ö –Ω–µ—Å–∫–æ–ª—å–∫–æ.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 4. –ù–∞–¥–æ —á–µ—Ç–∫–æ –ø–æ–Ω–∏–º–∞—Ç—å —á—Ç–æ —Å–¥–µ–ª–∞–µ—Ç –∫–æ–¥ print(input()) –∏ –ø–æ—á–µ–º—É —ç—Ç–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç print(input). –ö–æ–¥
print(input()) –∑–∞–ø—Ä–æ—Å–∏—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–µ–∫—Å—Ç –∏ —Ç—É—Ç –∂–µ –µ–≥–æ –Ω–∞–ø–µ—á–∞—Ç–∞–µ—Ç, —Ç.–∫. —Ñ—É–Ω–∫—Ü–∏—è input() –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞. –ö–æ–¥
print(input) –≤—ã–¥–∞—Å—Ç –Ω–∞–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏: —Å—Ç—Ä–æ–∫—É built-in function input, –∫–æ—Ç–æ—Ä–∞—è –ø–æ—è—Å–Ω—è–µ—Ç,
 —á—Ç–æ input ‚Äî –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —è–∑—ã–∫–∞.'''

# s1 = 'python'
# s2 = 'stepicon'
# s3 = 'beegeek'
#
# print(min(s1, s2, s3))
# print(max(s1, s2, s3))

# beegeek
# stepicon


# s1 = 'python'
# s2 = 'stepicon'
# s3 = 'beegeek'
#
# print(min(s1, s2, s3, key=len))
# print(max(s1, s2, s3, key=len))
# python
# stepicon

# def f(x):
#     return x**2
#
#
# g = f
# print(f(3), g(5))  # 9 25

# def f(x):
#     return x**2
#
#
# def g(x):
#     return x**3
#
#
# funcs = [f, g]
# print(funcs[0](5), funcs[1](5))  # 25 125
#
# def comparator(pair):
#     return pair[1]
#
#
# pairs = [(5, 4), (3, 2), (1, 7), (8, 2)]
# pairs.sort(key=comparator)
# print(pairs)  # [(3, 2), (8, 2), (5, 4), (1, 7)]


# def comparator(pair):
#     return pair[0] + pair[1]
#
#
# pairs = [(5, 4), (3, 2), (1, 7), (8, 2)]
# pairs.sort(key=comparator, reverse=True)
# print(pairs)

# [(8, 2), (5, 4), (1, 7), (3, 2)]

# words = ['this', 'is', 'a', 'test', 'of', 'sorting']
# words.sort(key=len)
# print(words)

# ['a', 'is', 'of', 'this', 'test', 'sorting']

# def f1(x):
#     return 2*x+1
#
#
# def f2(x):
#     return x**2
#
#
# def f3(x):
#     return -x**2+1
#
#
# def f4(x):
#     return x-3
#
#
# funcs = [f1, f2, f3, f4]
# i = int(input())
# print(funcs[i](2))

# 5
# 4
# -3
# -1
# error

'''–î–∞–Ω —Å–ø–∏—Å–æ–∫ numbers, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∫–æ—Ä—Ç–µ–∂–∏ —á–∏—Å–µ–ª. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å –ø–æ–º–æ—â—å—é –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π min() –∏
 max() –≤—ã–≤–æ–¥–∏—Ç —Ç–µ –∫–æ—Ä—Ç–µ–∂–∏ (–∫–∞–∂–¥—ã–π –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ), –∫–æ—Ç–æ—Ä—ã–µ –∏–º–µ—é—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Å—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ
  –∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç key.'''
#
# numbers = [(10, 10, 10), (30, 45, 56), (81, 39), (1, 2, 3), (12,), (-2, -4, 100), (1, 2, 99), (89, 9, 34), (10, 20, 30, -2), (50, 40, 50), (34, 78, 65), (-5, 90, -1, -5), (1, 2, 3, 4, 5, 6), (-9, 8, 4), (90, 1, -45, -21)]
# def comparator(tpl):
#     return sum(tpl) / len(tpl)
# print(min(numbers, key=comparator))
# print(max(numbers, key=comparator))


# numbers = [(10, 10, 10), (30, 45, 56), (81, 39), (1, 2, 3), (12,), (-2, -4, 100), (1, 2, 99), (89, 9, 34), (10, 20, 30, -2), (50, 40, 50), (34, 78, 65), (-5, 90, -1, -5), (1, 2, 3, 4, 5, 6), (-9, 8, 4), (90, 1, -45, -21)]
# print(min(numbers, key=lambda a: sum(a) / len(a)))
# print(max(numbers, key=lambda a: sum(a) / len(a)))


# from statistics import mean
# numbers = [(10, 10, 10), (30, 45, 56), (81, 39), (1, 2, 3), (12,), (-2, -4, 100), (1, 2, 99), (89, 9, 34), (10, 20, 30, -2), (50, 40, 50), (34, 78, 65), (-5, 90, -1, -5), (1, 2, 3, 4, 5, 6), (-9, 8, 4), (90, 1, -45, -21)]
#
# print(*(func(numbers, key=mean) for func in (min, max)), sep='\n')

'''–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ points –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —Ç–æ—á–µ–∫ –ø–ª–æ—Å–∫–æ—Å—Ç–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ–º –æ—Ç –Ω–∞—á–∞–ª–∞
 –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç (—Ç–æ—á–∫–∏ (0;0)). –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –Ω–∞—á–∞–ª–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç O(0;0) –¥–æ —Ç–æ—á–∫–∏ A(x;y) —Ä–∞–≤–Ω–æ OA = sqrt{x^2+y^2}
 .'''

# from math import sqrt
#
# points = [(-1, 1), (5, 6), (12, 0), (4, 3), (0, 1), (-3, 2), (0, 0), (-1, 3), (2, 0), (3, 0), (-9, 1), (3, 6), (8, 8)]
#
# def distance_to_0(point):
#     return sqrt(point[0] ** 2 + point[1] ** 2)
#
# print(sorted(points, key=distance_to_0))


# points = [(-1, 1), (5, 6), (12, 0), (4, 3), (0, 1), (-3, 2), (0, 0), (-1, 3), (2, 0), (3, 0), (-9, 1), (3, 6), (8, 8)]
# points.sort(key=lambda x: x[0]**2 + x[1]**2)
# print(points)


# points = [(-1, 1), (5, 6), (12, 0), (4, 3), (0, 1), (-3, 2), (0, 0), (-1, 3), (2, 0), (3, 0), (-9, 1), (3, 6), (8, 8)]
#
#
# def pp(x):
#     return (x[0] ** 2 + x[1] ** 2) ** 0.5
#
#
# points.sort(key=pp)
#
# print(points)


# points = [(-1, 1), (5, 6), (12, 0), (4, 3), (0, 1), (-3, 2), (0, 0), (-1, 3), (2, 0), (3, 0), (-9, 1), (3, 6), (8, 8)]
# points.sort(key=lambda a: abs(complex(a[0], a[1])))
# print(points)


'''–î–∞–Ω —Å–ø–∏—Å–æ–∫ numbers, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∫–æ—Ä—Ç–µ–∂–∏ —á–∏—Å–µ–ª. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ numbers –≤ 
—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Å—É–º–º–æ–π –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∫–æ—Ä—Ç–µ–∂–∞.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –í —ç—Ç–æ–π –∑–∞–¥–∞—á–µ –º—ã —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ –∫–æ—Ä—Ç–µ–∂ (2, 1, 3) –º–µ–Ω—å—à–µ –∫–æ—Ä—Ç–µ–∂–∞ (6,4,5), 
—Ç–∞–∫ –∫–∞–∫ 1+3 < 4+6. –ü—Ä–∏ —ç—Ç–æ–º –∫–æ—Ä—Ç–µ–∂ (1, 2, 9) —Ä–∞–≤–µ–Ω –∫–æ—Ä—Ç–µ–∂—É (4, 5, 6), —Ç–∞–∫ –∫–∞–∫ 1+9 = 4+6.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç key.'''

# numbers = [(10, 10, 10), (30, 45, 56), (81, 80, 39), (1, 2, 3), (12, 45, 67), (-2, -4, 100), (1, 2, 99), (89, 90, 34), (10, 20, 30), (50, 40, 50), (34, 78, 65), (-5, 90, -1)]
#
# def sum_minmax(tpl):
#     return min(tpl) + max(tpl)
#
# print(sorted(numbers, key=sum_minmax))


# numbers = [(10, 10, 10), (30, 45, 56), (81, 80, 39), (1, 2, 3), (12, 45, 67), (-2, -4, 100), (1, 2, 99), (89, 90, 34), (10, 20, 30), (50, 40, 50), (34, 78, 65), (-5, 90, -1)]
# numbers.sort(key=lambda i: min(i) + max(i))
#
# print(numbers)


# numbers = [(10, 10, 10), (30, 45, 56), (81, 80, 39), (1, 2, 3), (12, 45, 67), (-2, -4, 100), (1, 2, 99), (89, 90, 34), (10, 20, 30), (50, 40, 50), (34, 78, 65), (-5, 90, -1)]
# def min_max_sum(x):
#         return min(x)+max(x)
# numbers.sort(key=min_max_sum)
#
# print(numbers)

# def sort_minmax(number):
#     return min(number) + max(number)
#
# numbers = [(10, 10, 10), (30, 45, 56), (81, 80, 39), (1, 2, 3), (12, 45, 67), (-2, -4, 100), (1, 2, 99), (89, 90, 34),
#            (10, 20, 30), (50, 40, 50), (34, 78, 65), (-5, 90, -1)]
#
# print(sorted(numbers, key=sort_minmax))

'''–°–æ—Ä—Ç–∏—Ä—É–π –∫–∞–∫ —Ö–æ—á–µ—à—å
–°–ø–∏—Å–æ–∫ athletes —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–≤–µ–¥–µ–Ω–∏—è –æ —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–∞—Ö –≤ –≤–∏–¥–µ –∫–æ—Ä—Ç–µ–∂–µ–π: (–∏–º—è, –≤–æ–∑—Ä–∞—Å—Ç, —Ä–æ—Å—Ç, –≤–µ—Å).

–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Å–ø–∏—Å–∫–∞ —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø–æ–ª—é:

1: –ø–æ –∏–º–µ–Ω–∏;
2: –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É;
3: –ø–æ —Ä–æ—Å—Ç—É;
4: –ø–æ –≤–µ—Å—É.
–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 11 –¥–æ 44 ‚Äì –Ω–æ–º–µ—Ä –ø–æ–ª—è –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –ø–æ–ª—é —Å–ø–∏—Å–æ–∫ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –†–µ—à–∏—Ç–µ –∑–∞–¥–∞—á—É –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —É—Å–ª–æ–≤–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞.

Sample Input 1:

3
Sample Output 1:

–†—É—Å—Ç–∞–º 10 128 30
–î–∏–º–∞ 10 130 35
–¢–∏–º—É—Ä 11 135 39
–†—É—Å–ª–∞–Ω 9 140 33
–ú–∞—Ç–≤–µ–π 17 168 68
–ê–º–∏—Ä 16 170 70
–†–æ–º–∞ 16 188 100
–ü–µ—Ç—è 15 190 90
Sample Input 2:

2
Sample Output 2:

–†—É—Å–ª–∞–Ω 9 140 33
–î–∏–º–∞ 10 130 35
–†—É—Å—Ç–∞–º 10 128 30
–¢–∏–º—É—Ä 11 135 39
–ü–µ—Ç—è 15 190 90
–ê–º–∏—Ä 16 170 70
–†–æ–º–∞ 16 188 100
–ú–∞—Ç–≤–µ–π 17 168 68'''

# def compare(x):
#     return x[i-1]
#
# athletes = [('–î–∏–º–∞', 10, 130, 35), ('–¢–∏–º—É—Ä', 11, 135, 39), ('–†—É—Å–ª–∞–Ω', 9, 140, 33),
#             ('–†—É—Å—Ç–∞–º', 10, 128, 30), ('–ê–º–∏—Ä', 16, 170, 70), ('–†–æ–º–∞', 16, 188, 100),
#             ('–ú–∞—Ç–≤–µ–π', 17, 168, 68), ('–ü–µ—Ç—è', 15, 190, 90)]
# i=int(input())
# athletes.sort(key=compare)
# for item in athletes:
#     print(*item)

# athletes = [('–î–∏–º–∞', 10, 130, 35), ('–¢–∏–º—É—Ä', 11, 135, 39), ('–†—É—Å–ª–∞–Ω', 9, 140, 33), ('–†—É—Å—Ç–∞–º', 10, 128, 30), ('–ê–º–∏—Ä', 16, 170, 70), ('–†–æ–º–∞', 16, 188, 100), ('–ú–∞—Ç–≤–µ–π', 17, 168, 68), ('–ü–µ—Ç—è', 15, 190, 90)]
# n = int(input()) - 1
# for i in sorted(athletes, key=lambda x: x[n]):
#     print(*i)


# athletes = [('–î–∏–º–∞', 10, 130, 35), ('–¢–∏–º—É—Ä', 11, 135, 39), ('–†—É—Å–ª–∞–Ω', 9, 140, 33), ('–†—É—Å—Ç–∞–º', 10, 128, 30), ('–ê–º–∏—Ä', 16, 170, 70), ('–†–æ–º–∞', 16, 188, 100), ('–ú–∞—Ç–≤–µ–π', 17, 168, 68), ('–ü–µ—Ç—è', 15, 190, 90)]
#
# def sort_name(athlete):
#     return athlete[0]
#
#
# def sort_age(athlete):
#     return athlete[1]
#
#
# def sort_height(athlete):
#     return athlete[2]
#
#
# def sort_weight(athlete):
#     return athlete[3]
#
# sort_by = {1: sort_name, 2: sort_age, 3: sort_height, 4: sort_weight}
#
# for i in sorted(athletes, key=sort_by[int(input())]):
#     print(*i)


# athletes = [('–î–∏–º–∞', 10, 130, 35), ('–¢–∏–º—É—Ä', 11, 135, 39), ('–†—É—Å–ª–∞–Ω', 9, 140, 33), ('–†—É—Å—Ç–∞–º', 10, 128, 30), ('–ê–º–∏—Ä', 16, 170, 70), ('–†–æ–º–∞', 16, 188, 100), ('–ú–∞—Ç–≤–µ–π', 17, 168, 68), ('–ü–µ—Ç—è', 15, 190, 90)]
# n = int(input()) - 1
# print(*[' '.join(list(map(str, i))) for i in sorted(athletes, key = lambda j: j[n])], sep='\n')


# athletes = [('–î–∏–º–∞', 10, 130, 35), ('–¢–∏–º—É—Ä', 11, 135, 39), ('–†—É—Å–ª–∞–Ω', 9, 140, 33), ('–†—É—Å—Ç–∞–º', 10, 128, 30), ('–ê–º–∏—Ä', 16, 170, 70), ('–†–æ–º–∞', 16, 188, 100), ('–ú–∞—Ç–≤–µ–π', 17, 168, 68), ('–ü–µ—Ç—è', 15, 190, 90)]
# num = int(input()) - 1
# for i in sorted(athletes, key=lambda x: x[num]):
#     print(*i)


'''–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∞ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –∫ –¥–∞–Ω–Ω–æ–º—É —á–∏—Å–ª—É.

–°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π:

–∫–≤–∞–¥—Ä–∞—Ç: —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –∫–≤–∞–¥—Ä–∞—Ç;
–∫—É–±: —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –∫—É–±;
–∫–æ—Ä–µ–Ω—å: —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä–µ–Ω—å –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∏–∑ —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞;
–º–æ–¥—É–ª—å: —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –º–æ–¥—É–ª—å;
—Å–∏–Ω—É—Å: —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ (–≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∏–Ω—É—Å —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞.
–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ–∫–∞—Ö.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–¥–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –∫ —á–∏—Å–ª—É.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –†–µ—à–∏—Ç–µ –∑–∞–¥–∞—á—É –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —É—Å–ª–æ–≤–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞.

Sample Input 1:

5
–∫–≤–∞–¥—Ä–∞—Ç
Sample Output 1:

25
Sample Input 2:

-3
–º–æ–¥—É–ª—å
Sample Output 2:

3
Sample Input 3:

10
–∫—É–±
Sample Output 3:

1000'''

# from math import sin
#
# def squarex(x):
#     return x** 2
# def cubex(x):
#     return x ** 3
# def sqrtx(x):
#     return x ** 0.5
# def absx(x):
#     return abs(x)
# def sinx(x):
#     return sin(x)
#
# func = {'–∫–≤–∞–¥—Ä–∞—Ç': squarex, '–∫—É–±': cubex, '–∫–æ—Ä–µ–Ω—å': sqrtx, '–º–æ–¥—É–ª—å': absx, '—Å–∏–Ω—É—Å': sinx}
# n = int(input())
# print(func[input()](n))


# import math
#
# def pwr(p):
#   def numpower(n):
#     return n**p
#   return numpower
#
# commands = {"–∫–≤–∞–¥—Ä–∞—Ç": pwr(2), "–∫—É–±": pwr(3), "–∫–æ—Ä–µ–Ω—å": pwr(0.5), "–º–æ–¥—É–ª—å": abs, "—Å–∏–Ω—É—Å": math.sin}
#
# n = int(input())
# command = input()
# print(commands[command](n))


# from math import sin
# square = lambda i: i ** 2
# cube = lambda i:  i ** 3
# sqrt = lambda i: i ** .5
# di = {"–∫–≤–∞–¥—Ä–∞—Ç": square, "–∫—É–±": cube, "–∫–æ—Ä–µ–Ω—å": sqrt, "–º–æ–¥—É–ª—å": abs, "—Å–∏–Ω—É—Å": sin}
# n = int(input())
# print(di[input()](n))


# import math
#
# functions = dict(–∫–≤–∞–¥—Ä–∞—Ç = lambda x: x*x,
#                  –∫—É–± = lambda x: x*x*x,
#                  –∫–æ—Ä–µ–Ω—å = math.sqrt,
#                  –º–æ–¥—É–ª—å = abs,
#                  —Å–∏–Ω—É—Å = math.sin)
#
# (lambda n, f: print(functions[f](n)))(int(input()), input())


# from math import sin
#
#
# def funcs(num, action):
#     actions = {"–∫–≤–∞–¥—Ä–∞—Ç": num ** 2,
#                "–∫—É–±": num ** 3,
#                "–∫–æ—Ä–µ–Ω—å": num ** 0.5,
#                "–º–æ–¥—É–ª—å": abs(num),
#                "—Å–∏–Ω—É—Å": sin(num)}
#
#     return actions[action]
#
#
# print(funcs(int(input()), input()))


'''–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞-1
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª. –ò–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–æ–∫–∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª.

–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Å–ø–∏—Å–∫–∞ —á–∏—Å–µ–ª –≤ –ø–æ—Ä—è–¥–∫–µ –Ω–µ—É–±—ã–≤–∞–Ω–∏—è —Å—É–º–º—ã –∏—Ö —Ü–∏—Ñ—Ä. –ü—Ä–∏ —ç—Ç–æ–º, –µ—Å–ª–∏ –¥–≤–∞ —á–∏—Å–ª–∞ –∏–º–µ—é—Ç 
–æ–¥–∏–Ω–∞–∫–æ–≤—É—é —Å—É–º–º—É —Ü–∏—Ñ—Ä, —Å–ª–µ–¥—É–µ—Ç —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏—Ö –≤–∑–∞–∏–º–æ—Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–º —Å–ø–∏—Å–∫–µ.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ —á–∏—Å–ª–∞, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–∞–º–∏.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —É—Å–ª–æ–≤–∏–µ–º –∑–∞–¥–∞—á–∏, —Ä–∞–∑–¥–µ–ª—è—è –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç—ã –æ–¥–Ω–∏–º 
–ø—Ä–æ–±–µ–ª–æ–º.

–ü–æ–¥—Å–∫–∞–∑–∫–∞
–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø—Ä–∏ –ø–æ–º–æ—â–∏ —Ñ—É–Ω–∫—Ü–∏–∏ sorted() –∏ —Å–ø–∏—Å–æ—á–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ sort() —è–≤–ª—è–µ—Ç—Å—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π, —Ç–æ –µ—Å—Ç—å –æ–Ω–∞ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç 
–Ω–µ–∏–∑–º–µ–Ω–Ω–æ—Å—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è —Ä–∞–≤–Ω—ã—Ö –º–µ–∂–¥—É —Å–æ–±–æ–π —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

Sample Input 1:

12 14 79 7 4 123 45 90 111
Sample Output 1:

12 111 4 14 123 7 45 90 79'''

# nums = input().split()
# def sums(num):
#     return sum(int(x) for x in num)
# print(*sorted(nums, key=sums))


# print(*sorted(input().split(), key=lambda x: sum(map(int, x))))

# nums = input().split()
# print(*sorted(nums, key=lambda x: sum(map(int, list(x)))))

# print(*sorted(input().split(), key=lambda x: sum(int(d) for d in x)))


# l=list(map(int, input().split()))
#
# def sum_digits_from_low_to_top(num):
#     snum=str(num)
#     total=0
#     for i in range(len(snum)):
#         total=total+int(snum[i])
#     res=total
#     return res
#
# print(*(sorted(l, key=sum_digits_from_low_to_top, reverse=False)))


# s = input().split()
# s.sort(key=lambda x: sum(int(i) for i in x))
# print(*s)


'''–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞-2
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª. –ò–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–æ–∫–∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª.

–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Å–ø–∏—Å–∫–∞ —á–∏—Å–µ–ª –≤ –ø–æ—Ä—è–¥–∫–µ –Ω–µ—É–±—ã–≤–∞–Ω–∏—è —Å—É–º–º—ã –∏—Ö —Ü–∏—Ñ—Ä. –ü—Ä–∏ —ç—Ç–æ–º, –µ—Å–ª–∏ —É –¥–≤—É—Ö —á–∏—Å–µ–ª 
–æ–¥–∏–Ω–∞–∫–æ–≤–∞—è —Å—É–º–º–∞ —Ü–∏—Ñ—Ä, –∏—Ö —Å–ª–µ–¥—É–µ—Ç –≤—ã–≤–µ—Å—Ç–∏ –≤ –ø–æ—Ä—è–¥–∫–µ –Ω–µ—É–±—ã–≤–∞–Ω–∏—è.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ —á–∏—Å–ª–∞, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–∞–º–∏.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —É—Å–ª–æ–≤–∏–µ–º –∑–∞–¥–∞—á–∏, —Ä–∞–∑–¥–µ–ª—è—è –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç—ã 
–æ–¥–Ω–∏–º –ø—Ä–æ–±–µ–ª–æ–º.

–ü–æ–¥—Å–∫–∞–∑–∫–∞
Sample Input 1:

111 14 79 7 4 123 90 45 12 171
Sample Output 1:

12 111 4 14 123 7 45 90 171 79
Sample Input 2:

19 20 21 22 23 10 11 12 13 14 15 16 17 18
Sample Output 2:

10 11 20 12 21 13 22 14 23 15 16 17 18 19'''


# nums = input().split()
# nums.sort(key=lambda x: int(x))
# # print(nums)
# def sums(num):
#     return sum(int(x) for x in num)
# print(*sorted(nums, key=sums))


# def numsum(x):
#     return sum(int(n) for n in str(x))
#
#
# numbers = [int(i) for i in input().split()]
# print(*sorted(sorted(numbers), key=numsum))


# print(*sorted(sorted(input().split(), key=int), key=lambda x: sum(map(int, list(x)))))


# print(*sorted(input().split(), key=lambda n: (sum(map(int, n)), int(n))))