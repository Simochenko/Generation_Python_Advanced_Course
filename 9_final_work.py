# m = int(input())
# print(*sorted(set.intersection(*({input() for _ in range(int(input()))} for _ in range(m)))), sep="\n")

# m = int(input()) # –°—á–∏—Ç—ã–≤–∞–µ–º —á–∏—Å–ª–æ –ª–∏—Å—Ç–∫–æ–≤ M
# print(* # –û–ø–µ—Ä–∞—Ç–æ—Ä —Ä–∞–∑—ã–º–µ–Ω–æ–≤—ã–≤–∞–Ω–∏—è –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤ (–±–ª–æ–∫–æ–≤ —Å—Ç—Ä–æ—á–µ–∫)
#     set.intersection( # –í—ã–≤–æ–¥–∏–º –ø–æ—Å—Ç—Ä–æ—á–Ω–æ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–∏—Ö –º–Ω–æ–∂–µ—Å—Ç–≤:
#     * # –û–ø–µ—Ä–∞—Ç–æ—Ä —Ä–∞–∑—ã–º–µ–Ω–æ–≤—ã–≤–∞–Ω–∏—è –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º—ã—Ö –º–Ω–æ–∂–µ—Å—Ç–≤ (–±–ª–æ–∫–æ–≤ —Å—Ç—Ä–æ—á–µ–∫)
#     (
#         # –°—á–∏—Ç—ã–≤–∞–µ–º –æ—á–µ—Ä–µ–¥–Ω–æ–π –±–ª–æ–∫ —Ñ–∞–º–∏–ª–∏–π –≤–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ:
#         {input() # –°—á–∏—Ç—ã–≤–∞–µ–º –æ—á–µ—Ä–µ–¥–Ω—É—é —Ñ–∞–º–∏–ª–∏—é –≤ –±–ª–æ–∫–µ (–ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ —Å—á–∏—Ç–∞–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–º–∏–ª–∏–π –≤ –±–ª–æ–∫–µ)
#         for _ in range(int(input())) # –°—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–º–∏–ª–∏–π –≤ –±–ª–æ–∫–µ, –∑–∞—Ç–µ–º –∏—Ç–µ—Ä–∏—Ä—É–µ–º N —Å—Ç—Ä–æ–∫
#         } # –í–≤–æ–¥ –æ–∫–æ–Ω—á–µ–Ω
#         for _ in range(m) # –ò—Ç–µ—Ä–∏—Ä—É–µ–º M –±–ª–æ–∫–æ–≤
#     )), sep="\n" # –ù–∞—à —Å–µ–ø–∞—Ä–∞—Ç–æ—Ä - –ø–µ—Ä–µ–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏
# )

# a = int(input())
# b = int(input())
# z = set()
# x = set()
# count= 0
# for v in range(a):
#     c = input()
#     z.add(c)
# for n in range(b):
#     s = input()
#     x.add(s)
# count = len(z ^ x)
# print(count if count > 0 else 'NO')

# myset1 = set(input())
# myset2 = set(input())
# if myset2 == myset1:
#     print("YES")
# else:
#     print("NO")

#
# a = int(input())
# b = int(input())
# z = set()
# x = set()
#
# for v in range(a):
#     c = input()
#     z.add(c)
# for n in range(b):
#     s = input()
#     x.add(s)
#
# count = len(z ^ x)
# print(count if count > a else 'NO')

'''–°—Ç—Ä–∞–Ω–Ω–æ–µ —É–≤–ª–µ—á–µ–Ω–∏–µ
–ö–∞–∫ –∏–∑–≤–µ—Å—Ç–Ω–æ, –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ —Å—Ç—Ä–∞–Ω–Ω—ã–µ –ª—é–¥–∏. –ù–µ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏ –¢–∏–º—É—Ä ‚Äî –∞–≤—Ç–æ—Ä –¥–∞–Ω–Ω–æ–≥–æ –∫—É—Ä—Å–∞. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –¢–∏–º—É—Ä
—Ä–µ—à–∞–µ—Ç —Ä–æ–≤–Ω–æ –¥–≤–µ —Å–ª–æ–∂–Ω—ã–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏. –†–µ—à–∞—è –ø–µ—Ä–≤—É—é –∑–∞–¥–∞—á—É, –æ–Ω –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –Ω–∞ –ø–µ—Ä–≤–æ–º –ª–∏—Å—Ç–æ—á–∫–µ –≤—Å–µ —á–∏—Å–ª–∞,
 –∫–æ—Ç–æ—Ä—ã–µ –≤ –Ω–µ–π –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è. –î–∞–ª–µ–µ –æ–Ω –¥–µ–ª–∞–µ—Ç –ø–∞—É–∑—É –∏ –±–µ—Ä–µ—Ç—Å—è –∑–∞ –≤—Ç–æ—Ä—É—é –∑–∞–¥–∞—á—É. –ó–∞—Ç–µ–º –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –Ω–∞ –≤—Ç–æ—Ä–æ–º –ª–∏—Å—Ç–æ—á–∫–µ
 –≤—Å–µ —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –≤ –Ω–µ–π –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –æ–Ω –±–µ—Ä–µ—Ç –µ—â–µ –æ–¥–∏–Ω –ª–∏—Å—Ç–æ–∫ –∏ –≤—ã–ø–∏—Å—ã–≤–∞–µ—Ç –Ω–∞ –Ω–µ–≥–æ –≤—Å–µ —Å–æ–≤–ø–∞–¥–∞—é—â–∏–µ
 —á–∏—Å–ª–∞ –∏–∑ –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö –ª–∏—Å—Ç–æ—á–∫–æ–≤. –ï—Å–ª–∏ —Ç–∞–∫–∏–µ —á–∏—Å–ª–∞ –µ—Å—Ç—å, –¥–µ–Ω—å —É–¥–∞–ª—Å—è, –µ—Å–ª–∏ –æ–±—â–∏—Ö —á–∏—Å–µ–ª –Ω–µ—Ç, –¢–∏–º—É—Ä —Å—á–∏—Ç–∞–µ—Ç –¥–µ–Ω—å –Ω–µ—É–¥–∞—á–Ω—ã–º.

–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç –æ–±—â–∏–µ —á–∏—Å–ª–∞ –¥–≤—É—Ö –ª–∏—Å—Ç–æ—á–∫–æ–≤ –∏–ª–∏ —Å–æ–æ–±—â–∞–µ—Ç, —á—Ç–æ –¥–µ–Ω—å –Ω–µ —É–¥–∞–ª—Å—è üòè

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–µ —Å—Ç—Ä–æ–∫–∏ —Å —á–∏—Å–ª–∞–º–∏: –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ —á–∏—Å–ª–∞ —Å –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Å—Ç–æ—á–∫–∞, –≤–æ –≤—Ç–æ—Ä–æ–π —Å–æ –≤—Ç–æ—Ä–æ–≥–æ.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —á–∏—Å–ª–∞, –≤—Å—Ç—Ä–µ—Ç–∏–≤—à–∏–µ—Å—è –Ω–∞ –æ–±–æ–∏—Ö –ª–∏—Å—Ç–∫–∞—Ö –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø–æ —É–±—ã–≤–∞–Ω–∏—é –ø–æ—Ä—è–¥–∫–µ, –ª–∏–±–æ
—Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–µ BAD DAY, –µ—Å–ª–∏ —Ç–∞–∫–∏—Ö —á–∏—Å–µ–ª –Ω–µ—Ç.

Sample Input 1:

6 56 7 34 14
675 45 246 2 1
Sample Output 1:

BAD DAY
Sample Input 2:

1 2 3 4 5 6 12
6 5 4 3 2 1
Sample Output 2:

6 5 4 3 2 1
Sample Input 3:

24 6 14 7
7 24 6 98 53
Sample Output 3:

24 7 6'''

# z = set(map(int, input().split()))
# x = set(map(int, input().split()))
# y = (x&z)
#
# print(*['BAD DAY'] if len(x.intersection(z)) <= 0 else sorted(y,reverse=True))

# a=set(list(map(int, input().split())))
# b=set(list(map(int, input().split())))
# print(*sorted(a&b,reverse=True) if not a.isdisjoint(b) else ['BAD DAY'])
#
#
a = set(map(int, input().split()))
b = set(map(int, input().split()))
if len(a&b) == 0: print('BAD DAY')
else: print(*sorted((a&b), reverse=True))


# a = int(input())
# b = int(input())
# z = set()
# x = set()
#
# for v in range(a):
#     c = input()
#     z.add(c)
# for n in range(b):
#     s = input()
#     x.add(s)
#
# count = len(z ^ x)
# print(count if count > 0 else 'NO')


'''–û–Ω–ª–∞–π–Ω-—à–∫–æ–ª–∞ BEEGEEK 5 üå∂Ô∏è
–ö–∞–∂–¥—ã–π —É—á–µ–Ω–∏–∫, –æ–±—É—á–∞—é—â–∏–π—Å—è –≤ –æ–Ω–ª–∞–π–Ω-—à–∫–æ–ª–µ BEEGEEK –∏–∑—É—á–∞–µ—Ç –ª–∏–±–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫—É, –ª–∏–±–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫—É, –ª–∏–±–æ –æ–±–∞ —ç—Ç–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–∞.
–£ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —à–∫–æ–ª—ã –µ—Å—Ç—å —Å–ø–∏—Å–∫–∏ —É—á–µ–Ω–∏–∫–æ–≤, –∏–∑—É—á–∞—é—â–∏—Ö –∫–∞–∂–¥—ã–π –ø—Ä–µ–¥–º–µ—Ç. –°–ª—É—á–∞–π–Ω–æ —Å–ø–∏—Å–∫–∏ –≤—Å–µ—Ö —É—á–µ–Ω–∏–∫–æ–≤ –ø–µ—Ä–µ–º–µ—à–∞–ª–∏—Å—å.

–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª–∏—Ç —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—é –≤—ã—è—Å–Ω–∏—Ç—å, —Å–∫–æ–ª—å–∫–æ —É—á–µ–Ω–∏–∫–æ–≤ –∏–∑—É—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø—Ä–µ–¥–º–µ—Ç.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –≤ –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö —Å—Ç—Ä–æ–∫–∞—Ö –ø–æ–¥–∞—é—Ç—Å—è —á–∏—Å–ª–∞ mm –∏ nn ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–µ–Ω–∏–∫–æ–≤, –∏–∑—É—á–∞—é—â–∏—Ö –º–∞—Ç–µ–º–∞—Ç–∏–∫—É –∏
–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫—É —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ. –î–∞–ª–µ–µ –∏–¥—É—Ç m+nm+n —Å—Ç—Ä–æ–∫ ‚Äî —Ñ–∞–º–∏–ª–∏–∏ —É—á–µ–Ω–∏–∫–æ–≤, –∏–∑—É—á–∞—é—â–∏—Ö –º–∞—Ç–µ–º–∞—Ç–∏–∫—É –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫—É, –≤
–ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–µ–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –∏–∑—É—á–∞—é—Ç —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø—Ä–µ–¥–º–µ—Ç. –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤ –Ω–µ –æ–∫–∞–∂–µ—Ç—Å—è,
—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏ NO.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ —Å—Ä–µ–¥–∏ —É—á–µ–Ω–∏–∫–æ–≤ —à–∫–æ–ª—ã BEEGEEK –Ω–µ—Ç –æ–¥–Ω–æ—Ñ–∞–º–∏–ª—å—Ü–µ–≤.

Sample Input 1:

2
3
–•–æ—Ö–ª–æ–≤
–§–∞–¥–µ–µ–≤
–ï—Ä—à–æ–≤
–£—à–∞–∫–æ–≤
–•–æ—Ö–ª–æ–≤
Sample Output 1:

3
Sample Input 2:

5
1
–ò–≥–Ω–∞—Ç–æ–≤
–ú—É—Ö–∏–Ω
–°–∞—Ñ–æ–Ω–æ–≤
–ö–∞–ª–∞—à–Ω–∏–∫–æ–≤
–î–µ–º–∏–Ω
–†—ã–±–∞–∫–æ–≤
Sample Output 2:

6'''

# num1 = int(input())
# num2 = int(input())
# eng = set()
# ger = set()
#
# for i in range(num1):
#     c = input()
#     eng.add(c)
# for i in range(num2):
#     c = input()
#     ger.add(c)
#
# eng_ger = eng.union(ger)
# german = len(eng_ger) - num1
# english = len(eng_ger) - num2
# english_german = german + english
#
# if english_german > 0:
#     print(english_german)
# else:
#     print('NO')

# n, m = int(input()), int(input())
# a = [input() for _ in range(n+m)]
# if len(set(a)) - (len(a) - len(set(a))) != 0: print(len(set(a)) - (len(a) - len(set(a))))
# else: print('NO')


# n, m = int(input()), int(input())
# set1 = [input() for row in range(n + m)]
#
# temp = set(set1)
# count = 0
# for i in temp:
#     if set1.count(i) == 1:
#         count += 1
# if count == 0:
#     print('NO')
# else:
#     print(count)


# m,n=int(input()),int(input())
# s=[input() for i in range(n+m)]
# s1=set()
# for i in s:
#     if i not in s1:
#         s1.add(i)
#     else:
#         s1.remove(i)
# print(("NO",len(s1))[len(s1)!=0])


'''–í–æ—Å—Ö–æ–¥
–ù–∞ —Å–ø—É—Ç–Ω–∏–∫–µ ¬´–í–æ—Å—Ö–æ–¥¬ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∏–±–æ—Ä –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è —Å–æ–ª–Ω–µ—á–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. –ö–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É –æ–Ω –ø–µ—Ä–µ–¥–∞—ë—Ç –≤ –æ–±—Å–µ—Ä–≤–∞—Ç–æ—Ä–∏—é –ø–æ 
–∫–∞–Ω–∞–ª—É —Å–≤—è–∑–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–Ω–µ—Ä–≥–∏–∏ —Å–æ–ª–Ω–µ—á–Ω–æ–≥–æ –∏–∑–ª—É—á–µ–Ω–∏—è. –î–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
 –Ω–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –¥–µ—Ä–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –¥–∞–Ω–Ω—ã–µ. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫–∞–∑–∞–Ω–∏–π 
 —Å–ø—É—Ç–Ω–∏–∫–∞, –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ—Ç–æ—Ä—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —á–∏—Å–ª–∞ ‚Äì –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å–ø—É—Ç–Ω–∏–∫–∞ ¬´–í–æ—Å—Ö–æ–¥¬ª. –ß–∏—Å–ª–∞ —É–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫–∞–∑–∞–Ω–∏–π, –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω
 –≤–µ—Ä–Ω–æ.

Sample Input 1:

10 20 30 10 40
Sample Output 1:

1
Sample Input 2:

1 2 3 4 5 6 7 8 9 1 2 3
Sample Output 2:

3
Sample Input 3:

100 100 100 100 100 100 100
Sample Output 3:

6'''

# m=input().split()
# s=set(i for i in m)
# s1=[i for i in m]
# print(len(s1)-len(s))

# l = input().split()
# print(len(l) - len(set(l)))


# ls = [int(_) for  _ in input().split()]
# print(len(ls) - len(set(ls)))

# [print(len(nums)-len(set(nums))) for nums in [input().split()]]
