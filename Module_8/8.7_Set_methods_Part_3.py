'''Тема урока: методы множеств
Методы issuperset(), issubset(), isdisjoint()
Сравнение множеств (<, >, <=, >=)
Аннотация. Урок посвящен методам множеств и сравнению множеств.

Подмножества и надмножества
Напомним, что множество set1 является подмножеством множества set2, если все элементы первого входят во второе.
При этом множество set2 – надмножество множества set1.

    Любое множество – подмножество самого себя, про такое подмножество говорят "нестрогое подмножество".

Метод issubset()
Для определения, является ли одно из множеств подмножеством другого, используется метод issubset(). Данный метод
 возвращает значение True, если одно множество является подмножеством другого, и False, если не является.

Приведенный ниже код:

set1 = {2, 3}
set2 = {1, 2, 3, 4, 5, 6}

print(set1.issubset(set2))
выводит:

True
В этом примере set2 содержит все элементы set1. Это означает, что set1 – подмно­жество set2. Это также означает,
что set2 – надмножество set1.

Для определения, является ли одно из множеств подмножеством другого, также применяются операторы <= (нестрогое
подмножество) и < (строгое подмножество).

Приведенный ниже код:

set1 = {2, 3}
set2 = {1, 2, 3, 4, 5, 6}

print(set1 <= set2)
аналогичен предыдущему.

Метод issuperset()
Для определения, является ли одно из множеств надмножеством другого, используется метод issuperset(). Данный метод
возвращает значение True, если одно множество является надмножеством другого, в противном случае он возвращает False.

Приведенный ниже код:

set1 = {'a', 'b', 'c', 'd', 'e'}
set2 = {'c', 'e'}

print(set1.issuperset(set2))
выводит:

True
В этом примере set1 содержит все элементы set2. Это означает, что set1 – надмно­жество set2. Это также означает,
 что set2 – подмножество set1.

Для определения, является ли одно из множеств надмножеством другого, также применяются операторы >= (нестрогое
надмножество) и > (строгое надмножество).

Приведенный ниже код:

set1 = {'a', 'b', 'c', 'd', 'e'}
set2 = {'c', 'e'}

print(set1 >= set2)
аналогичен предыдущему.

Метод isdisjoint()
Для определения отсутствия общих элементов в множествах используется метод isdisjoint(). Данный метод возвращает
значение True, если множества не имеют общих элементов, и  False, когда множества имеют общие элементы.

Приведенный ниже код:

set1 = {1, 2, 3, 4, 5}
set2 = {5, 6, 7}
set3 = {7, 8, 9}

print(set1.isdisjoint(set2))
print(set1.isdisjoint(set3))
print(set2.isdisjoint(set3))
выводит:

False
True
False
Примечания
Примечание 1. Методы issuperset(), issubset(), isdisjoint() могут принимать в качестве аргумента не только
 множество (тип данных set), но и любой итерируемый объект (список, строку, кортеж).

Примечание 2. Операторы >, <, >=, <= требуют наличия в качестве операндов множеств.

Примечание 3. Таблица соответствия методов и операторов над множествами.

set1 <= set2
set1.issubset(set2)
Возвращает True, если set1 является подмножеством set2
set1 >= set2
set1.issuperset(set2)
Возвращает True, если set1 является надмножеством set2
set1 < set2
Эквивалентно set1 <= set2 and set1 != set2 (строгое подмножество)
set1 > set2
Эквивалентно set1 >= set2 and set1 != set2 (строгое надмножество)'''

# word = 'beegeek'
# set1 = set(word*3)
# set2 = set(word[::-1]*2 + 'stepik')
#
# print(set1 < set2)  # True

'''Одинаковые цифры
На вход программе подаются два числа. Напишите программу, определяющую, есть ли в данных числах одинаковые цифры.

Формат входных данных
На вход программе подаются два натуральных числа, каждое на отдельной строке.

Формат выходных данных
Программа должна вывести YES, если в записи данных чисел есть одинаковые цифры и NO если нет.

Sample Input 1:

114
223
Sample Output 1:

NO
Sample Input 2:

1523
3678
Sample Output 2:

YES'''

# f1 = set((input()))
# f2 = set((input()))
# if f2.isdisjoint(f1):
#     print("NO")
# else:
#     print("YES")

# print('NO' if set(input()).isdisjoint(set(input())) else 'YES')

# print("YES" if set(input()).isdisjoint(set(input())) else "NO")


# set1,set2=set(input()),set(input())
# print('NO' if set1.isdisjoint(set2) else 'YES' )

'''Все цифры
На вход программе подаются два числа. Напишите программу, которая определяет, входят ли в запись первого числа
 все цифры, содержащиеся в записи второго (независимо от повтора, то есть количества цифр) числа или нет.

Формат входных данных
На вход программе подаются два натуральных числа, каждое на отдельной строке.

Формат выходных данных
Программа должна вывести YES, если в запись первого числа входят все цифры, содержащиеся в записи второго числа
 и NO в противном случае.

Sample Input 1:

123456789
657
Sample Output 1:

YES
Sample Input 2:

1254
1243
Sample Output 2:

NO'''

# f1 = set((input()))
# f2 = set((input()))
# if f1.issuperset(f2):
#     print("YES")
# else:
#     print("NO")

# print('YES' if set(input()) >= set(input()) else 'NO')

'''Урок информатики
Даны по 10-балльной шкале оценки по информатике трех учеников. Напишите программу, которая выводит множество 
оценок, которые есть и у первого и второго учеников, но которых нет у третьего ученика.

Формат входных данных
На вход программе подаются оценки трех учеников, разделенные символом пробела (оценки каждого ученика на отдельной 
строке).

Формат выходных данных
Программа должна вывести множество оценок в порядке убывания на одной строке, разделенных пробелами, в соответствии
 с условием задачи.

Примечание. Оценка ученика находится в диапазоне от 0 до 10 включительно.

Sample Input 1:

1 5 4 2 5 6 6 2 3 3 5 2
2 3 5 1 2 1 2 6 7 1 1 6
1 4 6 9 8 7 0 9 0 9 8 10
Sample Output 1:

5 3 2'''

# f1 = set(map(int, input().split()))
# f2 = set(map(int, input().split()))
# f3 =set(map(int, input().split()))
# f13 = f1.difference(f3)
# f23 = f2.difference(f3)
# f = f13.intersection(f23)
# print(*sorted(f,reverse=True))

# a, b, c = [set(map(int, input().split())) for _ in range(3)]
# print(*sorted((a & b) - c, reverse=True))

# print(*sorted(map(int, set(input().split()) & set(input().split()) - set(input().split())), reverse=True))

# s1, s2, s3 = [set(map(int, input().split())) for _ in range(3)]
# print(*sorted(s1 & s2 - s3, reverse=True))


'''Урок математики
Даны по 10-балльной шкале оценки по математике трех учеников. Напишите программу, которая выводит множество
 оценок, имеющихся у учеников, которые встречаются не более, чем у двух из указанных учеников.

Формат входных данных
На вход программе подаются оценки трех учеников, разделенные символом пробела (оценки каждого ученика на отдельной
 строке).

Формат выходных данных
Программа должна вывести множество оценок в порядке возрастания на одной строке, разделенных пробелами, в соответствии 
с условием задачи.

Примечание. Оценка ученика находится в диапазоне от 00 до 1010 включительно.

Sample Input 1:

1 5 4 2 5 6 6 2 3 3 5 2
2 3 5 10 2 10 2 6 7 10 10 6
1 4 6 9 8 7 0 9 0 9 8 10
Sample Output 1:

0 1 2 3 4 5 7 8 9 10'''
#
# f1 = set(map(int, input().split()))
# f2 = set(map(int, input().split()))
# f3 =set(map(int, input().split()))
# f=(f1|f2|f3)
# ff=(f1&f2&f3)
# print(*sorted(f-ff))

# [print(*sorted(f ^ s | s ^ t, key=int)) for f, s, t in [(set(input().split()) for _ in '012')]]

# st1, st2, st3 = [set(map(int, input().split())) for _ in range(3)]
# print(*sorted( (st1 | st2 | st3).difference(st1 & st2 & st3), key=int))


# s1, s2, s3 = [set(map(int, input().split())) for _ in range(3)]
# print(*sorted((s1 | s2 | s3) - (s1 & s2 & s3)))


# a, b, c = [set(map(int, input().split())) for _ in range(3)]
# print(*sorted((a ^ b) | (b ^ c)))

'''Урок физики
Даны по 10-балльной шкале оценки по физике трех учеников. Напишите программу, которая выводит множество оценок 
третьего ученика, которые не встречаются ни у первого, ни у второго ученика.

Формат входных данных
На вход программе подаются оценки трех учеников, разделенные символом пробела (оценки каждого ученика на отдельной 
строке).

Формат выходных данных
Программа должна вывести множество оценок в порядке убывания на одной строке, разделенных пробелами, в соответствии
 с условием задачи.

Примечание. Оценка ученика находится в диапазоне от 0 до 10 включительно.

Sample Input 1:

1 5 4 2 5 6 6 2 3 3 5 2
2 3 5 1 2 1 2 6 7 1 1 6
1 4 6 9 8 7 0 9 0 9 8 10
Sample Output 1:

10 9 8 0'''

# f1 = set(map(int, input().split()))
# f2 = set(map(int, input().split()))
# f3 =set(map(int, input().split()))
# f12= f2|f1
# f123= f3.difference(f12)
# print(*sorted(f123,reverse=True))


# set_1, set_2, set_3 = (set(input().split()) for _ in range(3))
# print(*(sorted(set_3 - (set_1 | set_2), key=int, reverse=True)))

# s1, s2, s3 = (set([int(_) for _ in input().split()]) for j in '123')
# print(*[i for i in range(10, -1, -1) if (i not in s1 and i not in s2) and i in s3])

# set1, set2, set3 = [set(map(int, input().split())) for _ in range(3)]
# set3 = sorted(set3.difference(set1, set2), reverse = True)
# print(*set3)


# a, b, c = [{int(i) for i in input().split()} for _ in 'abc']
# print(*sorted(c - a - b, reverse=True))

'''Урок биологии
Даны по 10-балльной шкале оценки по биологии трех учеников. Напишите программу, которая выводит множество оценок, 
не встречающихся ни у одного из трех учеников.

Формат входных данных
На вход программе подаются оценки трех учеников, разделенные символом пробела (оценки каждого ученика на отдельной 
строке).

Формат выходных данных
Программа должна вывести множество оценок в порядке возрастания на одной строке, разделенных пробелами, в соответствии 
с условием задачи.

Примечание. Оценка ученика находится в диапазоне от 0 до 10 включительно.

Sample Input 1:

1 5 4 2 5 6 6 2 3 3 5 2
2 3 5 1 2 1 2 6 7 1 1 6
1 4 6 8 8 7 0 6 0 3 8 1
Sample Output 1:

9 10
Sample Input 2:

2 9 3 4 6 10
2 3 4 5 2 10
2 3 4 5 3 9
Sample Output 2:

0 1 7 8'''


# f = {0,1,2,3,4,5,6,7,8,9,10}
# f1 = set(map(int, input().split()))
# f2 = set(map(int, input().split()))
# f3 =set(map(int, input().split()))
# f007= f.difference(f1,f2,f3)
#
# print(*sorted(f007))


# a, b, c = [{int(i) for i in input().split()} for _ in 'abc']
# print(*sorted(set(range(11)) - (a | b | c)))


# a, b, c = [set(map(int, input().split())) for _ in range(3)]
#
# print(*sorted(set(range(11)) - (a | b | c)))


# set1, set2, set3 = (set(map(int, input().split())) for _ in range(3))
# print(*sorted(set(range(11)) - {*set1, *set2, *set3}))


