'''–®–∞—Ö–º–∞—Ç–Ω–∞—è –¥–æ—Å–∫–∞
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ n –∏ m. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Ç—Ä–∏—Ü—ã —Ä–∞–∑–º–µ—Ä–æ–º n√óm,
–∑–∞–ø–æ–ª–Ω–∏–≤ –µ—ë —Å–∏–º–≤–æ–ª–∞–º–∏ . –∏ * –≤ —à–∞—Ö–º–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. –í –ª–µ–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É –¥–æ–ª–∂–Ω–∞ —Å—Ç–æ—è—Ç—å —Ç–æ—á–∫–∞. –í—ã–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—É—é
–º–∞—Ç—Ä–∏—Ü—É –Ω–∞ —ç–∫—Ä–∞–Ω, —Ä–∞–∑–¥–µ–ª—è—è —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–æ–±–µ–ª–∞–º–∏.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ n –∏ m ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –º–∞—Ç—Ä–∏—Ü—É, –æ–ø–∏—Å–∞–Ω–Ω—É—é –≤ —É—Å–ª–æ–≤–∏–∏ –∑–∞–¥–∞—á–∏.

Sample Input 1:

3 4
Sample Output 1:

. * . *
* . * .
. * . *
Sample Input 2:

2 2
Sample Output 2:

. *
* .'''

# n, m = map(int,input().split())
# r = [['.*'[(j + i) % 2] for j in range(m)] for i in range(n)]
# for row in r:
#     print(*row)


# n, m = map(int, input().split())
# for i in range(n):
#     row = ['.' if (i + j) % 2 == 0 else '*' for j in range(m)]
#     print(*row)


# n, m = map(int, input().split())
# [print(*[['.', '*'][(i + j)% 2] for j in range(m)]) for i in range(n)]

'''–ü–æ–±–æ—á–Ω–∞—è –¥–∏–∞–≥–æ–Ω–∞–ª—å
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ nn. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–µ—Ç –º–∞—Ç—Ä–∏—Ü—É —Ä–∞–∑–º–µ—Ä–æ–º 
n√ón –∏ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –µ—ë –ø–æ —Å–ª–µ–¥—É—é—â–µ–º—É –ø—Ä–∞–≤–∏–ª—É:

—á–∏—Å–ª–∞ –Ω–∞ –ø–æ–±–æ—á–Ω–æ–π –¥–∏–∞–≥–æ–Ω–∞–ª–∏ —Ä–∞–≤–Ω—ã 1;
—á–∏—Å–ª–∞, —Å—Ç–æ—è—â–∏–µ –≤—ã—à–µ —ç—Ç–æ–π –¥–∏–∞–≥–æ–Ω–∞–ª–∏, —Ä–∞–≤–Ω—ã 0;
—á–∏—Å–ª–∞, —Å—Ç–æ—è—â–∏–µ –Ω–∏–∂–µ —ç—Ç–æ–π –¥–∏–∞–≥–æ–Ω–∞–ª–∏, —Ä–∞–≤–Ω—ã 2.
–ü–æ–ª—É—á–µ–Ω–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É –≤—ã–≤–µ–¥–∏—Ç–µ –Ω–∞ —ç–∫—Ä–∞–Ω. –ß–∏—Å–ª–∞ –≤ —Å—Ç—Ä–æ–∫–µ —Ä–∞–∑–¥–µ–ª—è–π—Ç–µ –æ–¥–Ω–∏–º –ø—Ä–æ–±–µ–ª–æ–º.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ nn ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –º–∞—Ç—Ä–∏—Ü—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —É—Å–ª–æ–≤–∏–µ–º –∑–∞–¥–∞—á–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ü–æ–±–æ—á–Ω–∞—è –¥–∏–∞–≥–æ–Ω–∞–ª—å ‚Äî —ç—Ç–æ –¥–∏–∞–≥–æ–Ω–∞–ª—å, –∏–¥—É—â–∞—è –∏–∑ –ø—Ä–∞–≤–æ–≥–æ –≤–µ—Ä—Ö–Ω–µ–≥–æ –≤ –ª–µ–≤—ã–π –Ω–∏–∂–Ω–∏–π —É–≥–æ–ª –º–∞—Ç—Ä–∏—Ü—ã.

Sample Input 1:

4
Sample Output 1:

0 0 0 1
0 0 1 2
0 1 2 2
1 2 2 2
Sample Input 2:

2
Sample Output 2:

0 1
1 2'''

# from numpy import sign
# n = int(input())
# a = [[sign(i+j+1-n)+1 for i in range(n)] for j in range(n)]
# for x in a:
#     print(*x)


# n = int(input())
# for i in range(n):
#     row = [0 if i < n - 1 - j else 1 if i == n - 1 - j else 2 for j in range(n)]
#     print(*row)


# def f(i, j, n):
#     if i == n - j - 1:
#         return 1
#     elif i < n - j - 1:
#         return 0
#     else:
#         return 2
#
# n = int(input())
#
# res = [[f(i, j, n) for j in range(n)] for i in range(n)]
#
# for x in res:
#     print(*x)

# n = int(input())
# m = int(input())
#
# args = [iter(range(1, n*m+1)) ]
# l = [ list(t) for t in list(zip(*args)) ]
#
# for i in range(len(l)):
#     print(*l[i], end=' ')
# ***************************************************************************
# n = int(input())
# m = int(input())
# a = []
# for i in range(n):
#     a.append([int(j) for j in range(m*n+1)])
#     print(str(*a[i]).ljust(3), end='')
#

# ***************************************************************************

'''–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–º–µ–π–∫–æ–π
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ n –∏ m. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–µ—Ç –º–∞—Ç—Ä–∏—Ü—É —Ä–∞–∑–º–µ—Ä–æ–º 
n√óm –∑–∞–ø–æ–ª–Ω–∏–≤ –µ—ë "–∑–º–µ–π–∫–æ–π" –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—Ä–∞–∑—Ü–æ–º.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ nn –∏ mm ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —É–∫–∞–∑–∞–Ω–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—Ä–∞–∑—Ü–æ–º.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ü—Ä–∏ –≤—ã–≤–æ–¥–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Ç—Ä–∏—Ü—ã, –æ—Ç–≤–æ–¥–∏—Ç–µ —Ä–æ–≤–Ω–æ 33 —Å–∏–º–≤–æ–ª–∞ –Ω–∞ –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç. –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ
—Å—Ç—Ä–æ–∫–æ–≤—ã–π –º–µ—Ç–æ–¥ ljust().

Sample Input 1:

3 5
Sample Output 1:

1  2  3  4  5
10 9  8  7  6
11 12 13 14 15
Sample Input 2:

5 5
Sample Output 2:

1  2  3  4  5
10 9  8  7  6
11 12 13 14 15
20 19 18 17 16
21 22 23 24 25'''
#
# def isZeros(matrix):
#     for char in matrix:
#         if 0 in char:
#             return True
#     return False
#
#
# def check():
#     global DOWNSIDE, UPSIDE, LEFTSIDE, RIGHTSIDE, DOWNDIAG, UPDIAG
#     if i == 0:
#         DOWNSIDE = False
#         UPSIDE = True
#     if i == N - 1:
#         DOWNSIDE = True
#         UPSIDE = False
#     if i != N - 1 and i != 0:
#         DOWNSIDE = False
#         UPSIDE = False
#     if j == 0:
#         LEFTSIDE = True
#         RIGHTSIDE = False
#     if j == M - 1:
#         RIGHTSIDE = True
#         LEFTSIDE = False
#     if j != M - 1 and j != 0:
#         LEFTSIDE = False
#         RIGHTSIDE = False
#
#
# N, M = map(int, input().split())
#
# matrix = [[0] * M for _ in range(N)]
#
# i = 0
# j = 0
#
# UPSIDE = True
# DOWNSIDE = False
# LEFTSIDE = True
# RIGHTSIDE = False
# UPDIAG = False
# DOWNDIAG = True
#
# num = 1
#
# while isZeros(matrix):
#     if matrix[i][j] == 0:
#         matrix[i][j] = num
#         num += 1
#     if (i < N - 1 and LEFTSIDE and DOWNDIAG) or (i < N - 1 and RIGHTSIDE and UPDIAG):
#         i += 1
#         if LEFTSIDE:
#             DOWNDIAG = False
#             UPDIAG = True
#         if RIGHTSIDE:
#             DOWNDIAG = True
#             UPDIAG = False
#         check()
#         continue
#     elif (j < M - 1 and UPSIDE and UPDIAG) or (j < M - 1 and DOWNSIDE and DOWNDIAG):
#         j += 1
#         if UPSIDE:
#             DOWNDIAG = True
#             UPDIAG = False
#         if DOWNSIDE:
#             DOWNDIAG = False
#             UPDIAG = True
#         check()
#         continue
#     elif i > 0 and j < M - 1 and UPDIAG:
#         i -= 1
#         j += 1
#         check()
#         continue
#     elif i < N - 1 and j > 0 and DOWNDIAG:
#         i += 1
#         j -= 1
#         check()
#         continue
#
# for r in range(N):
#     for c in range(M):
#         print(str(matrix[r][c]).ljust(3), end='')
#     print()

# n, m = map(int, input().split())
# for j in range(n):
#     print(' '.join([str(i + 1 + m * j).ljust(3) for i in range(m)][::pow(-1, j)]))

# a, b = map(int, input().split())
# g = iter(range(1, a * b + 1))
# [print(" ".join([f"{next(g):<2}" for j in range(b)][::(-1)**(i % 2)])) for i in range(a)]


# n, m = map(int, input().split())
# matrix = [[0] * m for i in range(n)]
#
# counter = 1
# for i in range(n):
#     if i % 2 == 0:
#         for j in range(m):
#             matrix[i][j] = counter
#             counter += 1
#             if j == m - 1:
#                 break
#     else:
#         for j in range(m - 1, -1, -1):
#             matrix[i][j] = counter
#             counter += 1
#             if j == 0:
#                 break
#
# for i in range(n):
#     for j in range(m):
#         print(str(matrix[i][j]).ljust(3), end='')
#     print()


'''–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∏–∞–≥–æ–Ω–∞–ª—è–º–∏ üå∂Ô∏è
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ n –∏ m. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–µ—Ç –º–∞—Ç—Ä–∏—Ü—É —Ä–∞–∑–º–µ—Ä–æ–º n√óm 
–∑–∞–ø–æ–ª–Ω–∏–≤ –µ—ë "–¥–∏–∞–≥–æ–Ω–∞–ª—è–º–∏" –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—Ä–∞–∑—Ü–æ–º.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ nn –∏ mm ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —É–∫–∞–∑–∞–Ω–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—Ä–∞–∑—Ü–æ–º.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ü—Ä–∏ –≤—ã–≤–æ–¥–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Ç—Ä–∏—Ü—ã, –æ—Ç–≤–æ–¥–∏—Ç–µ —Ä–æ–≤–Ω–æ 33 —Å–∏–º–≤–æ–ª–∞ –Ω–∞ –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç. –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–æ–∫–æ–≤—ã–π
 –º–µ—Ç–æ–¥ ljust().

Sample Input 1:

3 5
Sample Output 1:

1  2  4  7  10
3  5  8  11 13
6  9  12 14 15
Sample Input 2:

3 4
Sample Output 2:

1  2  4  7
3  5  8  10
6  9  11 12'''
# n, m = map(int, input().split())
# c = 1
# l = 0
# a = [[0 for _ in range(m)] for _ in range(n)]
# for i in range(m+n-1):
#     for j in range(n):
#         if ((i-j) > -1) and ((i-j) < m):
#             a[j][i-j]+=c
#             l+=1
#             c+=1
#     l = 0
# for o in a:
#   for o2 in o:
#     print(str(o2).rjust(3), end = '')
#   print()

# n, m = map(int, input().split())
# mt = [[''] * m for i in '1'* n]
# d = 1
# for k in range(1, n + m + 1):
#     for i in range(n):
#         for j in range(m):
#             if i + j + 1 == k:
#                 mt[i][j] = str(d).ljust(3)
#                 d += 1
# [print(*r, sep='') for r in mt]


# n, m = [int(i) for i in input().split()]
# matr = [[0] * m for _ in range(n)]
# k = 1
# for x in range(n * m + 1):
#     for i in range(n):
#         if i > x:
#             continue
#         if x - i >= m:
#             continue
#         matr[i][x - i] = k
#         k += 1
# for row in matr:
#     for c in row:
#         print(str(c).ljust(3), end='')
#     print()

'''–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ 3
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–µ—Ç –º–∞—Ç—Ä–∏—Ü—É —Ä–∞–∑–º–µ—Ä–æ–º n√ón –∑–∞–ø–æ–ª–Ω–∏–≤ 
–µ—ë –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—Ä–∞–∑—Ü–æ–º.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ nn ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —É–∫–∞–∑–∞–Ω–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—Ä–∞–∑—Ü–æ–º: —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –µ–¥–∏–Ω–∏—Ü—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π –∏ –ø–æ–±–æ—á–Ω–æ–π
 –¥–∏–∞–≥–æ–Ω–∞–ª—è—Ö, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –º–∞—Ç—Ä–∏—Ü—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –Ω—É–ª—è–º–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ü—Ä–∏ –≤—ã–≤–æ–¥–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Ç—Ä–∏—Ü—ã, –æ—Ç–≤–æ–¥–∏—Ç–µ —Ä–æ–≤–Ω–æ 33 —Å–∏–º–≤–æ–ª–∞ –Ω–∞ –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç. –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–æ–∫–æ–≤—ã–π 
–º–µ—Ç–æ–¥ ljust().

Sample Input 1:

5
Sample Output 1:

1  0  0  0  1
0  1  0  1  0
0  0  1  0  0
0  1  0  1  0
1  0  0  0  1'''

# n = int(input())
# matrix = [[0]*n for _ in range(n)]    # —Å–æ–∑–¥–∞–µ–º –∫–≤–∞–¥—Ä–∞—Ç–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É —Ä–∞–∑–º–µ—Ä–æ–º 8√ó8
#
# for i in range(n):                     # –∑–∞–ø–æ–ª–Ω—è–µ–º –≥–ª–∞–≤–Ω—É—é –¥–∏–∞–≥–æ–Ω–∞–ª—å 1-—Ü–∞–º–∏, –∞ –ø–æ–±–æ—á–Ω—É—é 2-–∫–∞–º–∏
#     matrix[i][i] = 1
#     matrix[i][n-i-1] = 1
#
# for r in range(n):                     # –≤—ã–≤–æ–¥–∏–º –º–∞—Ç—Ä–∏—Ü—É
#     for c in range(n):
#         print(str(matrix[r][c]).ljust(3), end=' ')
#     print()


# n = int(input())

# matrix =[['0'.ljust(3) for j in range(n)] for b in range(n)]
# for i in range(0, n):
#     for j in range(0, n):
#         if i == j or i == n - j - 1:
#             matrix[i][j] = '1'.ljust(3)
# for row in matrix:
#     print(*row)
#

# n = int(input())
# r = range(n)
# [print(" ".join(f"{int(i == j or (n - i - 1) == j):<2}" for j in r)) for i in r]

'''–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ 4
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ nn. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–µ—Ç –º–∞—Ç—Ä–∏—Ü—É —Ä–∞–∑–º–µ—Ä–æ–º n√ón –∑–∞–ø–æ–ª–Ω–∏–≤ 
–µ—ë –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—Ä–∞–∑—Ü–æ–º.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ nn ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —É–∫–∞–∑–∞–Ω–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—Ä–∞–∑—Ü–æ–º.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ü—Ä–∏ –≤—ã–≤–æ–¥–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Ç—Ä–∏—Ü—ã, –æ—Ç–≤–æ–¥–∏—Ç–µ —Ä–æ–≤–Ω–æ 3 —Å–∏–º–≤–æ–ª–∞ –Ω–∞ –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç. –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–æ–∫–æ–≤—ã–π
 –º–µ—Ç–æ–¥ ljust().

Sample Input 1:

5
Sample Output 1:

1  1  1  1  1
0  1  1  1  0
0  0  1  0  0
0  1  1  1  0
1  1  1  1  1
Sample Input 2:

7
Sample Output 2:

1  1  1  1  1  1  1
0  1  1  1  1  1  0
0  0  1  1  1  0  0
0  0  0  1  0  0  0
0  0  1  1  1  0  0
0  1  1  1  1  1  0
1  1  1  1  1  1  1'''

# n = int(input())
# matrix = [[0]*n for _ in range(n)]
# for i in range(n):
#     for j in range(n):
#         if i<j and i<n-1-j:
#             matrix[i][j] = 1
#         if i > j and i > n - 1 - j:
#             matrix[i][j] = 1
#         matrix[i][i] = 1
#         matrix[i][n-i-1] = 1
#
# for row in matrix:
#     print(*row)

# n = int(input())
# b = [[0]*n for i in range(n)]
# k = 1
# for i in range(n):
#     for j in range(n):
#         if i<=j and i<=n-j-1:
#             b[i][j]=1
#             b[n-1-i][j]=1
# for r in range(n):
#     for c in range(n):
#         print(str(b[r][c]).ljust(3), end='')
#     print()

# n = int(input())
# [print(*s) for s in
#  [[1 if (i <= j and i <= n - 1 - j) or (i >= j and i >= n - 1 - j) else 0 for j in range(n)] for i in range(n)]]
# ***************************************

# n, m = map(int, input().split())
# matrix = []
# for i in range(n+1):
#     for j in range(m+1):
#
#        matrix.append([j])
#
# for row in matrix:
#
#     for c in matrix:
#         print(*c, end=" ")


'''–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ 1
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ n –∏ m. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–µ—Ç –º–∞—Ç—Ä–∏—Ü—É —Ä–∞–∑–º–µ—Ä–æ–º 
n√óm –∏ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –µ—ë —á–∏—Å–ª–∞–º–∏ –æ—Ç 1 –¥–æ n‚ãÖm –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—Ä–∞–∑—Ü–æ–º.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ n –∏ m ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –º–∞—Ç—Ä–∏—Ü—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—Ä–∞–∑—Ü–æ–º.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ü—Ä–∏ –≤—ã–≤–æ–¥–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Ç—Ä–∏—Ü—ã, –æ—Ç–≤–æ–¥–∏—Ç–µ —Ä–æ–≤–Ω–æ 33 —Å–∏–º–≤–æ–ª–∞ –Ω–∞ –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç. –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ 
—Å—Ç—Ä–æ–∫–æ–≤—ã–π –º–µ—Ç–æ–¥ ljust().

Sample Input 1:

3 4
Sample Output 1:

1  2  3  4
5  6  7  8
9  10 11 12
Sample Input 2:

4 7
Sample Output 2:

1  2  3  4  5  6  7
8  9  10 11 12 13 14
15 16 17 18 19 20 21
22 23 24 25 26 27 28'''

# n, m = map(int,input().split())
# r = 1
# mas = []
# for i in range(n):
#     mas.append([])
#     for j in range(m):
#         mas[i].append(r)
#         r += 1
# for r in range(n):
#     for c in range(m):
#         print(str(mas[r][c]).ljust(3), end='')
#     print()

'''–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ 2
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ n –∏ m. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–µ—Ç –º–∞—Ç—Ä–∏—Ü—É —Ä–∞–∑–º–µ—Ä–æ–º n√óm 
–∑–∞–ø–æ–ª–Ω–∏–≤ –µ—ë –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—Ä–∞–∑—Ü–æ–º.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ n –∏ m ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —É–∫–∞–∑–∞–Ω–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—Ä–∞–∑—Ü–æ–º.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ü—Ä–∏ –≤—ã–≤–æ–¥–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Ç—Ä–∏—Ü—ã, –æ—Ç–≤–æ–¥–∏—Ç–µ —Ä–æ–≤–Ω–æ 3 —Å–∏–º–≤–æ–ª–∞ –Ω–∞ –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç. –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ
—Å—Ç—Ä–æ–∫–æ–≤—ã–π –º–µ—Ç–æ–¥ ljust().

Sample Input 1:

3 7
Sample Output 1:

1  4  7  10 13 16 19
2  5  8  11 14 17 20
3  6  9  12 15 18 21'''

# n, m = [int(i) for i in input().split()]
#
# for i in range(1, (n * m) + 1):
#     print(str(i).ljust(2), end=' ')
#     if i % m == 0:
#         print()

# n, m = map(int,input().split())
# r = 1
# mas = []
# for i in range(n):
#
#     for j in range(m):
#         mas.append([])
#         mas[i].append(r)
#         r += 1
#
# for c in range(n):
#     for r in range(m):
#         print(str(mas[c][r]).ljust(3), end='')
#     print()
#
# n, m = map(int,input().split())
# arr1 = np.arange(n)
# arr2 = np.arange(1,(n+1))
# print((arr1[:,None] + arr2))


'''–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ 2
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ n –∏ m. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–µ—Ç –º–∞—Ç—Ä–∏—Ü—É —Ä–∞–∑–º–µ—Ä–æ–º n√óm 
–∑–∞–ø–æ–ª–Ω–∏–≤ –µ—ë –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—Ä–∞–∑—Ü–æ–º.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ n –∏ m ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —É–∫–∞–∑–∞–Ω–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—Ä–∞–∑—Ü–æ–º.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ü—Ä–∏ –≤—ã–≤–æ–¥–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Ç—Ä–∏—Ü—ã, –æ—Ç–≤–æ–¥–∏—Ç–µ —Ä–æ–≤–Ω–æ 3 —Å–∏–º–≤–æ–ª–∞ –Ω–∞ –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç. –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–æ–∫–æ–≤—ã–π
 –º–µ—Ç–æ–¥ ljust().

Sample Input 1:

3 7
Sample Output 1:

1  4  7  10 13 16 19
2  5  8  11 14 17 20
3  6  9  12 15 18 21'''


# n, m = map(int,input().split())
# r = 1
# mas = []
# for j in range(m):
#     mas.append([])
#     for i in range(n):
#         mas[j].append(r)
#         r += 1
# for r in range(n):
#     for c in range(m):
#         print(str(mas[c][r]).ljust(3), end='')
#     print()

# n, m = [int(x) for x in input().split()]
#
# res = [[str(i + j * n + 1).ljust(2) for j in range(m)] for i in range(n)]
#
# for x in res:
#     print(*x)

#
# n, m = list(map(int, input().split()));
#
# for i in range(n):
#     num = i + 1;
#     for j in range(m):
#         print(str(num).ljust(3), end = '');
#         num += n;
#     print()

# n, m = [int(x) for x in input().split()]
#
# for j in range(n):
#     print(' '.join([str(i + 1 % m+1*j).ljust(3) for i in range(m)][::]))


'''–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ 5 üå∂Ô∏è
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ nn –∏ mm. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞–µ—Ç –º–∞—Ç—Ä–∏—Ü—É —Ä–∞–∑–º–µ—Ä–æ–º 
n√óm –∑–∞–ø–æ–ª–Ω–∏–≤ –µ—ë –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—Ä–∞–∑—Ü–æ–º.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ nn –∏ mm ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —É–∫–∞–∑–∞–Ω–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—Ä–∞–∑—Ü–æ–º.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ü—Ä–∏ –≤—ã–≤–æ–¥–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Ç—Ä–∏—Ü—ã, –æ—Ç–≤–æ–¥–∏—Ç–µ —Ä–æ–≤–Ω–æ 33 —Å–∏–º–≤–æ–ª–∞ –Ω–∞ –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç. –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–æ–∫–æ–≤—ã–π 
–º–µ—Ç–æ–¥ ljust().

Sample Input 1:

5 5
Sample Output 1:

1 2 3 4 5
2 3 4 5 1
3 4 5 1 2
4 5 1 2 3
5 1 2 3 4'''

# n, m = [int(x) for x in input().split()]
# res = [[str((i+1+j)-((i+j)//m)*m).ljust(2)  for j in range(m) ] for i in range(n)]
#
# for x in res:
#     print(*x)


# n, m = map(int, input().split())
# row = list(range(1, m + 1))
# for _ in range(n):
#     print(*row)
#     x = row.pop(0)
#     row.append(x)

# n, m = map(int, input().split())
# a = [i for i in range(1, m+1)]
# for i in range(n):
#     print(*a)
#     a = a[1:] + a[:1]


# r, c = map(int, input().split())
#
# mas = [[0] * c for _ in range(r)]
#
# i = 0
# j = 0
#
# num = 1
#
# right = True
# down = False
# left = False
# up = False
#
#
# def zero(mas):
#     for row in mas:
#         if 0 in row:
#             return True
#     return False
#
#
# while zero(mas):
#     if mas[i][j] == 0:
#         mas[i][j] = num
#         num += 1
#
#     if j < c - 1 and mas[i][j + 1] == 0 and right:
#         j += 1
#
#     elif i < r - 1 and mas[i + 1][j] == 0 and down:
#         i += 1
#
#     elif j >= 0 and mas[i][j - 1] == 0 and left:
#         j -= 1
#
#     elif i >= 0 and mas[i - 1][j] == 0 and up:
#         i -= 1
#     elif right:
#         right = False
#         down = True
#
#     elif down:
#         down = False
#         left = True
#
#     elif left:
#         left = False
#         up = True
#
#     elif up:
#         up = False
#         right = True
#
# for row in mas:
#     print(*row)

n, c = map(int, input().split()) #—Å—Ç—Ä–æ–∫–∏ –∏ —Å—Ç–æ–ª–±—Ü—ã
m = [[0 for _ in range(c)] for _ in range(n)]
i_start, i_end, j_start, j_end = 0, n, 0, c   # –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã (–≥—Ä–∞–Ω–∏—Ü—ã) –¥—ã–∏–∂–µ–Ω–∏—è –ø–æ –º–∞—Ç—Ä–∏—Ü–µ
di, dj = 1, 1  # –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è
k = 1  # –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ–ª—è
i = 0  # –∫–æ—Å—Ç—ã–ª—å –¥–ª—è –∑–∞–¥–∞–Ω–∏—è –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –ø–æ –ø–µ—Ä–≤–æ–º—É —Ä—è–¥—É
while k <= n*c:
    # –∑–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–ø—Ä–∞–≤–æ
    for j in range(j_start, j_end, dj):
        m[i][j] = str(k).ljust(3)
        k += 1
    dj = -1  # —Å–º–µ–Ω–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è
    i_start += 1  # –æ–±—Ä–µ–∑–∞–Ω–∏–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ —Ä—è–¥–∞ —Å–≤–µ—Ä—Ö—É
    if k > n * c:  # –ø—Ä–µ—Ä—ã–≤–∞–µ–Ω–∏–µ —Ü–∏–∫–ª–∞ –µ—Å–ª–∏ –∑–∞–æ–ª–Ω–µ–Ω–∞ –≤—Å—è –º–∞—Ç—Ä–∏—Ü–∞
        break
    # –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–Ω–∏–∑
    for i in range(i_start, i_end, di):
        m[i][j] = str(k).ljust(3)
        k += 1
    di = -1  # —Å–º–µ–Ω–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è
    j_end -= 1  # –æ–±—Ä–µ–∑–∞–Ω–∏–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞ —Å–ø—Ä–∞–≤–∞
    if k > n * c: # –ø—Ä–µ—Ä—ã–≤–∞–µ–Ω–∏–µ —Ü–∏–∫–ª–∞ –µ—Å–ª–∏ –∑–∞–æ–ª–Ω–µ–Ω–∞ –≤—Å—è –º–∞—Ç—Ä–∏—Ü–∞
        break
    # –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–ª–µ–≤–æ
    for j in range(j_end - 1, j_start - 1, dj):
        m[i][j] = str(k).ljust(3)
        k += 1
    dj = 1  # —Å–º–µ–Ω–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è
    i_end -= 1 # –æ–±—Ä–µ–∑–∞–Ω–∏–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ —Ä—è–¥–∞ —Å–Ω–∏–∑—É
    if k > n * c: # –ø—Ä–µ—Ä—ã–≤–∞–µ–Ω–∏–µ —Ü–∏–∫–ª–∞ –µ—Å–ª–∏ –∑–∞–æ–ª–Ω–µ–Ω–∞ –≤—Å—è –º–∞—Ç—Ä–∏—Ü–∞
        break
    # –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–≤–µ—Ä—Ö
    for i in range(i_end - 1, i_start - 1, di):
        m[i][j] = str(k).ljust(3)
        k += 1
    di = 1  # —Å–º–µ–Ω–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è
    j_start += 1 # –æ–±—Ä–µ–∑–∞–Ω–∏–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞ —Å–ª–µ–≤–∞
for i in m:
    print(*i)